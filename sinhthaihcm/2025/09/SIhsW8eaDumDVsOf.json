{
  "active": false,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Get Customer Type in MobiworkDMS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SplitInBatches": {
      "main": [
        [
          {
            "node": "Create Customer Type in MobiworkDMS",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Data Info",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check Data Existence": {
      "main": [
        [
          {
            "node": "SplitInBatches",
            "type": "main",
            "index": 0
          },
          {
            "node": "Preserve Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preserve Data": {
      "main": [
        [
          {
            "node": "Merge Data Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Data Info": {
      "main": [
        [
          {
            "node": "Write Logs To ERPNEXT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "SplitInBatches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Customer Type in MobiworkDMS": {
      "main": [
        [
          {
            "node": "ERPNext Customer Category",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ERPNext Customer Category": {
      "main": [
        [
          {
            "node": "Check Data Existence",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Customer Type in MobiworkDMS": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-29T08:33:18.384Z",
  "id": "SIhsW8eaDumDVsOf",
  "isArchived": false,
  "meta": null,
  "name": "[MBW DMS Cloud] Đồng bộ dữ liệu Customer Category ERPNext -> DMS",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1008,
        128
      ],
      "id": "34cfa833-6ec7-449b-9060-4f9b3d1081cb",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {
          "reset": false
        }
      },
      "id": "2cb78430-af63-4f3d-90ab-82f2625ddf33",
      "name": "SplitInBatches",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        -128,
        240
      ],
      "typeVersion": 2,
      "notesInFlow": true
    },
    {
      "parameters": {
        "functionCode": "const N = (s) => (s ?? '').toString().normalize('NFC').trim().toUpperCase();\n\n// 1) Lấy dữ liệu từ DMS\nconst dmsSource = $node['Get Channel in MobiworkDMS'].json ?? [];\nconst dmsRaw = Array.isArray(dmsSource)\n  ? (dmsSource[0]?.data ?? [])\n  : (dmsSource.data ?? []);\n\n// 2) Lấy dữ liệu từ ERP\nconst erpRaw = Array.isArray($json) ? $json : [];\n\n// 3) Lấy danh sách mã kênh đã có trong ERP\nconst dmsCodes = new Set(\n  dmsRaw\n    .map(x => N(x.ma)) // Dùng đúng field trong ERP\n    .filter(Boolean)\n);\n\n// 4) Chuẩn hóa dữ liệu từ DMS\nconst erp = erpRaw\n  .map(x => ({\n    ma: (x.name ?? '').toString().trim(),\n    ten: (x.channel ?? '').toString().trim()\n  }))\n  .filter(x => x.ma && x.ten);\n\n// 5) Chỉ giữ lại các record **chưa có trong ERP**\nconst toCreate = erp\n  .filter(x => !dmsCodes.has(N(x.code)))\n  .map(x => ({\n    ma: x.ma,\n    ten: x.ten,\n    active: true,\n    stt: 1\n  }));\n\n// 6) Nếu không có gì để tạo -> trả về []\nreturn toCreate.length ? toCreate.map(item => ({ json: item })) : [];\n"
      },
      "name": "Check Data Existence",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -352,
        128
      ],
      "id": "6deeab12-4ce1-4411-b592-e3bc9a1e1b43",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "functionCode": "\nreturn [{ json: $json }];"
      },
      "name": "Preserve Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -128,
        -32
      ],
      "id": "77405e4c-a895-4edd-a3e5-4351030b3d44",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "mode": "mergeByIndex",
        "join": "inner"
      },
      "name": "Merge Data Info",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 1,
      "position": [
        96,
        32
      ],
      "id": "e6724cee-8cfe-4b5d-9a90-a1a45a272bf1"
    },
    {
      "parameters": {
        "doctype": "MBWNext Integration Logs",
        "operation": "create",
        "parameters": "={\n\n  \"sync_type\": \"Customer Category\",\n  \"records_processed\": \"{{ $items().length }}\",\n  \"status\": \"Đồng bộ dữ liệu Customer Category thành công\",\n  \"log_message\": \"\"\n}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        320,
        32
      ],
      "id": "a7502b40-5ef6-4210-ba38-edfa98e89846",
      "name": "Write Logs To ERPNEXT",
      "executeOnce": true,
      "credentials": {
        "FrappeCustomApi": {
          "id": "q04ILlO0Tw9oAhAL",
          "name": "Sinh Thái ERPNext"
        }
      }
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        320,
        240
      ],
      "id": "90f75789-8304-49e6-bcb5-2a49d0c424be",
      "name": "Wait",
      "webhookId": "032098e3-b118-4605-8131-0035c9917fb1"
    },
    {
      "parameters": {
        "resource": "customerType",
        "additionalFields": {}
      },
      "type": "CUSTOM.mbwdmsCustom",
      "typeVersion": 1,
      "position": [
        -784,
        128
      ],
      "id": "b651c969-8a65-4b99-93dd-fba417b63895",
      "name": "Get Customer Type in MobiworkDMS",
      "credentials": {
        "MBWDMSCustomApi": {
          "id": "2SVxatk3bkSth64j",
          "name": "MBW DMS Cloud"
        }
      }
    },
    {
      "parameters": {
        "doctype": "Customer Category",
        "fields": "customer_category, name"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        -576,
        128
      ],
      "id": "3f236049-887e-4139-820f-368772cade19",
      "name": "ERPNext Customer Category",
      "alwaysOutputData": true,
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "MBW DMS Cloud ERPNext"
        }
      }
    },
    {
      "parameters": {
        "resource": "customerType",
        "operation": "create"
      },
      "type": "CUSTOM.mbwdmsCustom",
      "typeVersion": 1,
      "position": [
        96,
        224
      ],
      "id": "023df815-8c2d-4394-a5b2-3db76fcdce0d",
      "name": "Create Customer Type in MobiworkDMS",
      "credentials": {
        "MBWDMSCustomApi": {
          "id": "2SVxatk3bkSth64j",
          "name": "MBW DMS Cloud"
        }
      },
      "onError": "continueErrorOutput"
    }
  ],
  "pinData": {},
  "repo_name": "n8n-backup",
  "repo_owner": "MBW-Digital",
  "repo_path": "sinhthaihcm/",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-29T08:33:18.384Z",
      "updatedAt": "2025-09-29T08:33:18.384Z",
      "role": "workflow:owner",
      "workflowId": "SIhsW8eaDumDVsOf",
      "projectId": "NLp1g7OOFWKDmygg"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-09-09T08:58:51.547Z",
      "updatedAt": "2025-09-09T08:58:51.547Z",
      "id": "neaSaDNALEghkloE",
      "name": "MBW DMS"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-09-29T08:59:17.342Z",
  "versionId": "779035eb-d8b6-4f4a-b50b-15e116003b58"
}