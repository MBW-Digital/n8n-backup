{
  "active": false,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Get Channel in MobiworkDMS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SplitInBatches": {
      "main": [
        [
          {
            "node": "Create Channel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Data Info",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "SplitInBatches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Data Existence": {
      "main": [
        [
          {
            "node": "SplitInBatches",
            "type": "main",
            "index": 0
          },
          {
            "node": "Preserve Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preserve Data": {
      "main": [
        [
          {
            "node": "Merge Data Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Data Info": {
      "main": [
        [
          {
            "node": "Write Logs To ERPNEXT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Channel in MobiworkDMS": {
      "main": [
        [
          {
            "node": "DMS Sale Channel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DMS Sale Channel": {
      "main": [
        [
          {
            "node": "Check Data Existence",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Channel": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-22T10:20:37.777Z",
  "id": "wJzdlWfGvwJWPwmh",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[DMS] Đồng bộ dữ liệu Kênh từ DMS -> ERPNext",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -880,
        160
      ],
      "id": "7852e869-858a-434a-b47f-0ffc7d88cbf5",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {
          "reset": false
        }
      },
      "id": "9b96f8c9-63f3-4ac1-89b1-d328a889df15",
      "name": "SplitInBatches",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        0,
        272
      ],
      "typeVersion": 2,
      "notesInFlow": true
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        448,
        272
      ],
      "id": "9223e870-c6c4-4261-bd87-02b3588590e1",
      "name": "Wait1",
      "webhookId": "032098e3-b118-4605-8131-0035c9917fb1"
    },
    {
      "parameters": {
        "functionCode": "// === INPUT ===\n// $node['Get Channel in MobiworkDMS'].json -> DMS data\n// $json -> ERP data (dms_sales_chanel_code, dms_sale_chanel_name)\n\n// Helper chuẩn hóa (unicode + trim + uppercase)\nconst N = (s) => (s ?? '').toString().normalize('NFC').trim().toUpperCase();\n\n// 1) Lấy dữ liệu từ DMS\nconst dmsSource = $node['Get Channel in MobiworkDMS'].json ?? [];\nconst dmsRaw = Array.isArray(dmsSource)\n  ? (dmsSource[0]?.data ?? [])\n  : (dmsSource.data ?? []);\n\n// 2) Lấy dữ liệu từ ERP\nconst erpRaw = Array.isArray($json) ? $json : [];\n\n// 3) Lấy danh sách mã kênh đã có trong ERP\nconst erpCodes = new Set(\n  erpRaw\n    .map(x => N(x.dms_sales_chanel_code)) // Dùng đúng field trong ERP\n    .filter(Boolean)\n);\n\n// 4) Chuẩn hóa dữ liệu từ DMS\nconst dms = dmsRaw\n  .map(x => ({\n    code: (x.ma ?? '').toString().trim(),\n    name: (x.ten ?? '').toString().trim(),\n    active: x.trang_thai !== false,\n    stt: x.stt ?? null,\n  }))\n  .filter(x => x.code && x.name);\n\n// 5) Chỉ giữ lại các record **chưa có trong ERP**\nconst toCreate = dms\n  .filter(x => !erpCodes.has(N(x.code)))\n  .map(x => ({\n    name: x.code,\n    item_group_name: x.name,\n    is_group: 0,\n    dms_code: x.code,\n    active: x.active,\n    stt: x.stt\n  }));\n\n// 6) Nếu không có gì để tạo -> trả về []\nreturn toCreate.length ? toCreate.map(item => ({ json: item })) : [];\n"
      },
      "name": "Check Data Existence",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -224,
        160
      ],
      "id": "f32a618e-c535-4b08-9a8c-733dd7fc7c53",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "functionCode": "\nreturn [{ json: $json }];"
      },
      "name": "Preserve Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "dcd3cdb5-8611-4dd2-88c8-5de3dcce1fd9",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "mode": "mergeByIndex",
        "join": "inner"
      },
      "name": "Merge Data Info",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 1,
      "position": [
        224,
        64
      ],
      "id": "7a625e0a-b323-4e6b-8a6d-40a586712db8"
    },
    {
      "parameters": {
        "doctype": "MBWNext Integration Logs",
        "operation": "create",
        "parameters": "={\n\n  \"sync_type\": \"DMS Channel\",\n  \"records_processed\": \"{{ $items().length }}\",\n  \"status\": \"Đồng bộ dữ liệu DMS Channel thành công\",\n  \"log_message\": \"\"\n}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        448,
        64
      ],
      "id": "7107ec51-771a-48ed-9ac4-2ad517e2597e",
      "name": "Write Logs To ERPNEXT",
      "credentials": {
        "FrappeCustomApi": {
          "id": "q04ILlO0Tw9oAhAL",
          "name": "Frappe Custom Api account"
        }
      }
    },
    {
      "parameters": {
        "resource": "customerChannel",
        "additionalFields": {}
      },
      "type": "CUSTOM.mbwdmsCustom",
      "typeVersion": 1,
      "position": [
        -656,
        160
      ],
      "id": "585ef915-1357-4538-8c11-faf29f62698a",
      "name": "Get Channel in MobiworkDMS",
      "credentials": {
        "MBWDMSCustomApi": {
          "id": "CL08GJJwCUpHDevr",
          "name": "MBW DMS Open APIs "
        }
      }
    },
    {
      "parameters": {
        "doctype": "DMS Sales Chanel",
        "fields": "dms_sales_chanel_code,dms_sale_chanel_name"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        -448,
        160
      ],
      "id": "e675f437-e77e-4477-9b64-2f1989c92526",
      "name": "DMS Sale Channel",
      "alwaysOutputData": true,
      "credentials": {
        "FrappeCustomApi": {
          "id": "q04ILlO0Tw9oAhAL",
          "name": "Frappe Custom Api account"
        }
      }
    },
    {
      "parameters": {
        "doctype": "DMS Sales Chanel",
        "operation": "create",
        "parameters": "={\n  \"dms_sales_chanel_code\": \"{{ $json.dms_code }}\",\n  \"dms_sale_chanel_name\": \"{{ $json.name }}\"\n}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        224,
        272
      ],
      "id": "a152fb91-12bb-4ef8-b9cf-df493a892fb7",
      "name": "Create Channel",
      "alwaysOutputData": true,
      "credentials": {
        "FrappeCustomApi": {
          "id": "q04ILlO0Tw9oAhAL",
          "name": "Frappe Custom Api account"
        }
      }
    }
  ],
  "pinData": {},
  "repo_name": "n8n-backup",
  "repo_owner": "MBW-Digital",
  "repo_path": "sinhthaihcm/",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-22T10:20:37.777Z",
      "updatedAt": "2025-09-22T10:20:37.777Z",
      "role": "workflow:owner",
      "workflowId": "wJzdlWfGvwJWPwmh",
      "projectId": "NLp1g7OOFWKDmygg"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-09-09T08:58:51.547Z",
      "updatedAt": "2025-09-09T08:58:51.547Z",
      "id": "neaSaDNALEghkloE",
      "name": "MBW DMS"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-09-22T10:20:49.737Z",
  "versionId": "deb34fad-bc67-4274-a560-54de490e9e57"
}