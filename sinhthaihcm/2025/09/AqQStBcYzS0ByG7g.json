{
  "active": false,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Lấy sản phẩm MobiworkDMS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lấy sản phẩm MobiworkDMS": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MBWD ERPNext": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "MBWD ERPNext",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MBWD ERPNext1": {
      "main": [
        [
          {
            "node": "Split",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "MBWD ERPNext1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-03T08:03:38.357Z",
  "id": "AqQStBcYzS0ByG7g",
  "isArchived": false,
  "meta": null,
  "name": "Đồng bộ dữ liệu sản phẩm từ MBWDMS -> ERPNext",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1120,
        40
      ],
      "id": "8c75f352-111f-49cc-b2d8-41d8531859ad",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "resource": "product",
        "additionalFields": {}
      },
      "type": "CUSTOM.mbwdmsCustom",
      "typeVersion": 1,
      "position": [
        -900,
        40
      ],
      "id": "ef01fd49-bc73-42e1-8c2a-7a3f00c231e5",
      "name": "Lấy sản phẩm MobiworkDMS",
      "credentials": {
        "MBWDMSCustomApi": {
          "id": "CL08GJJwCUpHDevr",
          "name": "MBW DMS Open APIs "
        }
      }
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "operation": "create",
        "parameters": "={\n  \"reference_doctype\": \"Item\",\n  \"reference_name\": \"{{ $json.reference_name }}\",\n  \"operation\": \"Create\",\n  \"retry_count\": 0,\n  \"status\": \"Pending\",\n  \"payload\": {{JSON.stringify($json.payload_str)}},\n  \"log_message\": \"Item create from Sync MBW DMS\",\n  \"create_date\": \"\",\n  \"sync_time\": null,\n  \"source_data\": \"MBW DMS\"\n}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        -220,
        60
      ],
      "id": "319b09c7-6e3a-4c33-9552-36dfceafc0ed",
      "name": "MBWD ERPNext",
      "alwaysOutputData": false,
      "credentials": {
        "FrappeCustomApi": {
          "id": "q04ILlO0Tw9oAhAL",
          "name": "Frappe Custom Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// items: array sản phẩm từ MobiWork\nreturn items.map(({ json }) => {\n  // Chuẩn hóa nhóm hàng -> mảng\n  const groupPath = (json.nganh_hang || '').split('>').map(s => s.trim()).filter(Boolean);\n\n  // Đo VAT %\n  const vat = Number(json.vat || 0);\n\n  // Hệ số quy đổi (dvt_chan -> dvt_le)\n  const factor = Number(json.hsqđ || json.hsgd || json.hsg || json.hsqd || 1);\n\n  const payload = {\n    doctype: \"Item\",\n    item_code: (json.ma_sp || \"\").trim(),\n    item_name: (json.ten_sp || \"\").trim(),\n    brand: (json.nhan_hieu || \"\").trim(),\n    item_group_path: groupPath,\n    default_supplier: (json.nha_cung_cap || \"\").trim(),\n    stock_uom: (json.dvt_le || \"Nos\").trim(),\n    description: json.mo_ta || \"\",\n    is_stock_item: 1,\n    disabled: 0,\n    custom_invoice_item_name: json.ten_xuat_hoa_don || \"\",\n    custom_invoice_item_code: json.ma_xuat_hoa_don || \"\",\n    uom_conversions: {\n      big_uom: json.dvt_chan || \"\",\n      small_uom: json.dvt_le || \"\",\n      factor\n    },\n    barcodes: json.ma_vach ? [{\n      barcode: String(json.ma_vach),\n      barcode_type: String(json.ma_vach).length === 13 ? \"EAN-13\" : \"Code128\"\n    }] : [],\n    prices: [\n      { price_list: \"Standard Buying\",    price_list_rate: Number(json.gia_nhap || json.gia_nhap_le || 0) },\n      { price_list: \"Retail Selling\",     price_list_rate: Number(json.gia_le || 0) },\n      { price_list: \"Wholesale Selling\",  price_list_rate: Number(json.gia_chan || 0) }\n    ].filter(p => p.price_list_rate > 0),\n    tax: { vat_percent: vat },\n    images: Array.isArray(json.hinh_anh) ? json.hinh_anh.filter(Boolean) : []\n  };\n\n  return {\n    json: {\n      payload_str: JSON.stringify(payload),\n      reference_doctype: \"Item\",\n      reference_name: payload.item_code,\n      operation: \"Create\",\n      retry_count: 0,\n      status: \"Pending\",\n      log_message: \"Auto-created for Item operation\",\n      create_date: new Date().toISOString(),\n      sync_time: null,\n      source_data: \"MBW NEXT\"\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -680,
        40
      ],
      "id": "33d8f678-38e4-4494-a0f0-84ac4dc0b5f4",
      "name": "Code"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -460,
        40
      ],
      "id": "3e362edc-9cbe-4266-83d3-826e2a930344",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "amount": 0.5
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -20,
        40
      ],
      "id": "7dc9eebb-7f99-4be1-ab27-e1b3b0ed3f73",
      "name": "Wait",
      "webhookId": "50056d38-ba2b-453c-9cda-522d0db3e7c6"
    },
    {
      "parameters": {
        "content": "## Subworkflow",
        "height": 732,
        "width": 1743,
        "color": 6
      },
      "id": "f9aa2310-1de2-4d1c-942a-9888752e915b",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1160,
        300
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// Biến một mảng trong 1 item thành nhiều item riêng\nfunction safeParse(value) {\n  if (typeof value !== 'string') return value;\n  const s = value?.trim?.() ?? '';\n  if (!s || (s[0] !== '{' && s[0] !== '[')) return value;\n  try { return JSON.parse(s); } catch { return value; }\n}\n\nconst all = $input.all();\nlet records;\n\n// 1) Trường hợp API trả về mảng ngay ở root\nif (Array.isArray(all[0]?.json)) {\n  records = all[0].json;\n\n// 2) Hoặc gói trong thuộc tính data\n} else if (Array.isArray(all[0]?.json?.data)) {\n  records = all[0].json.data;\n\n// 3) Hoặc đã là nhiều item sẵn\n} else {\n  records = all.map(i => i.json);\n}\n\n// Nếu mỗi record có trường payload dạng string → parse sang object (không bắt buộc)\nreturn records.map(r => {\n  const parsed = ('payload' in r) ? safeParse(r.payload) : r.payload;\n  return { json: { ...r, payload: parsed } };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -560,
        560
      ],
      "id": "cfaf0b9b-98e4-4eda-8cb2-1cbcfa9ae1ea",
      "name": "Split"
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "fields": "reference_doctype,reference_name,operation,payload,name",
        "filters": {
          "filter": [
            {
              "field": "source_data",
              "value": "MBW DMS"
            },
            {
              "field": "status",
              "operator": "in",
              "value": "Pending"
            },
            {
              "field": "reference_doctype",
              "value": "Item"
            }
          ]
        }
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        -820,
        560
      ],
      "id": "9e111f77-2841-4ccf-9b55-274cad3db224",
      "name": "MBWD ERPNext1",
      "credentials": {
        "FrappeCustomApi": {
          "id": "q04ILlO0Tw9oAhAL",
          "name": "Frappe Custom Api account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -220,
        -120
      ],
      "id": "3071aacd-b168-40c1-afd8-bc98084fc147",
      "name": "Execute Workflow"
    },
    {
      "parameters": {},
      "id": "ad4c6129-78cb-4193-9fa5-f50185124758",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -1020,
        560
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "repo_name": "n8n-backup",
  "repo_owner": "MBW-Digital",
  "repo_path": "sinhthaihcm/",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-03T08:03:38.357Z",
      "updatedAt": "2025-09-03T08:03:38.357Z",
      "role": "workflow:owner",
      "workflowId": "AqQStBcYzS0ByG7g",
      "projectId": "NLp1g7OOFWKDmygg"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-18T08:59:15.617Z",
  "versionId": "0732ba3f-6e32-446e-bfa4-1db86619e9f2"
}