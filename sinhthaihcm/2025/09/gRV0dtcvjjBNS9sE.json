{
  "active": false,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add Item To Queue": {
      "main": [
        [
          {
            "node": "Respond to Webhook Item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add Customer To Queue": {
      "main": [
        [
          {
            "node": "Respond to Webhook Customer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add Sale Order To Queue": {
      "main": [
        [
          {
            "node": "Respond to Webhook Sale Order",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Format Data Customer Before Insert",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Data Item Before Insert",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Order Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Order Type": {
      "main": [
        [
          {
            "node": "Add Sale Order To Queue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Data Customer Before Insert": {
      "main": [
        [
          {
            "node": "Add Customer To Queue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Data Item Before Insert": {
      "main": [
        [
          {
            "node": "Add Item To Queue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-24T06:08:59.876Z",
  "id": "gRV0dtcvjjBNS9sE",
  "isArchived": false,
  "meta": null,
  "name": "Webhook DMS Listen Event",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "7072f742-2fb4-4000-b8ef-2e3a1ea5c667",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -432,
        64
      ],
      "id": "6317cf98-3488-484d-9a7a-cd4395caab07",
      "name": "Webhook",
      "webhookId": "7072f742-2fb4-4000-b8ef-2e3a1ea5c667"
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "operation": "create",
        "parameters": "={\n  \"reference_doctype\": \"Item\",\n  \"reference_name\": \"{{ $json.reference_name }}\",\n  \"operation\": \"Create\",\n  \"retry_count\": 0,\n  \"status\": \"Pending\",\n  \"payload\": {{ $json.payload_str }},\n  \"log_message\": \"Item create from Webhook MBW DMS\",\n  \"create_date\": \"\",\n  \"sync_time\": null,\n  \"source_data\": \"MBW DMS\"\n}\n"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        240,
        64
      ],
      "id": "5e9be52d-d14d-426f-bce9-8b0b12466201",
      "name": "Add Item To Queue",
      "alwaysOutputData": false,
      "credentials": {
        "FrappeCustomApi": {
          "id": "q04ILlO0Tw9oAhAL",
          "name": "Frappe Custom Api account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"status\": \"ok\",\n  \"message\": \"Item has insert Queue\"\n}",
        "options": {}
      },
      "id": "c251009b-5b54-4618-bdbb-797415108c9b",
      "name": "Respond to Webhook Item",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        464,
        64
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"status\": \"ok\",\n  \"message\": \"Customer has add to Queue\"\n}",
        "options": {}
      },
      "id": "791c3707-e94e-407b-859a-19293b7a5242",
      "name": "Respond to Webhook Customer",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        464,
        -128
      ]
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "operation": "create",
        "parameters": "={\n  \"reference_doctype\": \"Customer\",\n  \"reference_name\": \"{{ $json.reference_name}}\",\n  \"operation\": \"Create\",\n  \"retry_count\": 0,\n  \"status\": \"Pending\",\n  \"payload\": {{ $json.payload_str}},\n  \"log_message\": \"Customer create from Webhook MBW DMS\",\n  \"create_date\": \"\",\n  \"sync_time\": null,\n  \"source_data\": \"MBW DMS\"\n}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        240,
        -128
      ],
      "id": "a5076138-9d0e-4c49-b5b1-777ae320c86e",
      "name": "Add Customer To Queue",
      "alwaysOutputData": false,
      "credentials": {
        "FrappeCustomApi": {
          "id": "q04ILlO0Tw9oAhAL",
          "name": "Frappe Custom Api account"
        }
      }
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "operation": "create",
        "parameters": "={\n  \"reference_doctype\": \"{{ $json.body.data[0].reference_doctype }}\",\n  \"reference_name\": \"{{ $json.body.data[0].ma_phieu }}\",\n  \"operation\": \"Create\",\n  \"retry_count\": 0,\n  \"status\": \"Pending\",\n  \"payload\": {{ JSON.stringify($json.body.data[0]) }},\n  \"log_message\": \"{{ $json.body.data[0].reference_doctype }} create from Webhook MBW DMS\",\n  \"create_date\": \"\",\n  \"sync_time\": null,\n  \"source_data\": \"MBW DMS\"\n}\n"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        240,
        256
      ],
      "id": "06ed8426-3343-4e36-a31b-9857adeea68e",
      "name": "Add Sale Order To Queue",
      "alwaysOutputData": false,
      "credentials": {
        "FrappeCustomApi": {
          "id": "q04ILlO0Tw9oAhAL",
          "name": "Frappe Custom Api account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"status\": \"ok\",\n  \"message\": \"Sale Order has insert Queue\"\n}",
        "options": {}
      },
      "id": "40fccc69-fb5f-4f89-9a4b-801f0157f7d0",
      "name": "Respond to Webhook Sale Order",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        464,
        256
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{$json['body']['type']}}",
                    "rightValue": "=DMS_Customers",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "2a5fdb3f-54fb-4414-b3df-2ecc6762f233"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DMS_Customers"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9d789fd9-c24a-4aea-8e06-2964706d3c63",
                    "leftValue": "={{$json['body']['type']}}",
                    "rightValue": "DMS_Items",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DMS_Items"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6c046d38-9e61-4f2a-a450-78648f73bbe3",
                    "leftValue": "={{$json['body']['type']}}",
                    "rightValue": "DMS_Ban_hang",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DMS_Ban_hang"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -240,
        48
      ],
      "id": "ff11518a-858e-4310-8032-b269e5072641",
      "name": "Switch",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "jsCode": "// Map loai_don_hang sang reference_doctype\nconst mapLoaiDonHang = {\n  0: \"Sale Order Return\",\n  1: \"Sale Order\",\n  2: \"Sale Invoice\"\n};\n\nreturn items.map(item => {\n  const data = item.json.body.data[0];\n  \n  // ThÃªm field reference_doctype\n  return {\n    json: {\n      ...item.json,\n      body: {\n        ...item.json.body,\n        data: [\n          {\n            ...data,\n            reference_doctype: mapLoaiDonHang[data.loai_don_hang] || \"Sale Order\"\n          }\n        ]\n      }\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        16,
        256
      ],
      "id": "524df1f8-a488-4c2d-9329-19f7fa8fdefd",
      "name": "Check Order Type"
    },
    {
      "parameters": {
        "jsCode": "// Láº¥y danh sÃ¡ch khÃ¡ch hÃ ng tá»« Webhook\nconst customers = items[0].json.body?.data || [];\n\n// Map dá»¯ liá»u\nreturn customers.map(customer => {\n\n  // === 1. Chuáº©n hÃ³a dá»¯ liá»u cÆ¡ báº£n ===\n  const customerCode = (customer.makh || \"\").trim();\n  const customerName = (customer.tenkh || \"\").trim();\n\n  const groupPath = (customer.nhom_kh || \"\").trim();\n  const status = (customer.trang_thai_kh || \"\").toLowerCase() === \"hoáº¡t Äá»ng\" ? \"Active\" : \"Disabled\";\n  const creditLimit = Number(customer.han_muc_cn || 0);\n\n  // === 2. ThÃ´ng tin liÃªn há» (Contact) ===\n  const contact = {\n    first_name: (customer.nguoi_lien_he || \"\").trim(),\n    designation: (customer.chuc_vu || \"\").trim(),\n    phone: (customer.sdt || \"\").trim(),\n    email_id: (customer.email || \"\").trim(),\n    birthday: customer.sinh_nhat && customer.sinh_nhat !== \"1970-01-01T00:00:00.000Z\"\n      ? customer.sinh_nhat\n      : null\n  };\n\n  // === 3. Äá»a chá» (Address) ===\n  const address = {\n    // Äá»a chá» chÃ­nh cá»§a khÃ¡ch hÃ ng\n    address_primary: (customer.dia_chi || \"\").trim(),\n    // Äá»a chá» giao hÃ ng\n    address_Shipping: (customer.dc_giao_hangnh || \"\").trim(),\n    // Äá»a chá» xuáº¥t hÃ³a ÄÆ¡n\n    billing_address: (customer.dia_chi_xuat_hoa_don || \"\").trim(),\n    city: \"\",\n    country: \"Vietnam\"\n  };\n\n  // === 4. Payload Äáº§y Äá»§ cho ERPNext ===\n  const payload = {\n    doctype: \"Customer\",\n\n    // ThÃ´ng tin chÃ­nh\n    customer_code: customerCode,\n    customer_name: customerName,\n    customer_group_path: groupPath,\n    customer_type: (customer.loai_kh || \"\").trim(),\n    status: status,\n    credit_limit: creditLimit,\n    custom_channel: (customer.kenh || \"\").trim(),\n\n    // **ThÃ´ng tin xuáº¥t hÃ³a ÄÆ¡n & phÃ¢n loáº¡i**\n    ma_khach_hang_xuat_hoa_don: (customer.ma_khach_hang_xuat_hoa_don || \"\").trim(),\n    ho_va_ten_khach_hang: (customer.ho_va_ten_khach_hang || \"\").trim(),\n    phan_loai_khach_hang_ma: (customer.phan_loai_khach_hang_ma || \"\").trim(),\n    phan_loai_khach_hang: (customer.phan_loai_khach_hang || \"\").trim(),\n    dia_chi_xuat_hoa_don: (customer.dia_chi_xuat_hoa_don || \"\").trim(),\n    mo_ta_kmxuat_hoa_don_ma: (customer.mo_ta_kmxuat_hoa_don_ma || \"\").trim(),\n    mo_ta_kmxuat_hoa_don: (customer.mo_ta_kmxuat_hoa_don || \"\").trim(),\n\n    // Äá»a chá» vÃ  liÃªn há»\n    address,\n    contact,\n\n    // Metadata phá»¥c vá»¥ kiá»m tra\n    metadata: {\n      created_by: (customer.nguoi_tao || \"\").trim(),\n      updated_by: (customer.nguoi_sua || \"\").trim(),\n      last_updated_at: customer.ngay_cap_nhat || new Date().toISOString()\n    }\n  };\n\n  // === 5. Tráº£ vá» dá»¯ liá»u Äáº§y Äá»§ ===\n  return {\n    json: {\n      \n\n      // ThÃªm thÃ´ng tin chuáº©n hÃ³a cho ERPNext\n      payload_str: JSON.stringify(payload),\n      reference_doctype: \"Customer\",\n      reference_name: customerCode,\n      operation: \"Create\",\n      retry_count: 0,\n      status: \"Pending\",\n      log_message: \"Auto-created for Customer operation\",\n      create_date: new Date().toISOString(),\n      sync_time: null,\n      source_data: \"MBW DMS\"\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        16,
        -128
      ],
      "id": "1288977d-ccf7-4ef8-8dbe-2e00430a411a",
      "name": "Format Data Customer Before Insert"
    },
    {
      "parameters": {
        "jsCode": "// Láº¥y dá»¯ liá»u tá»« Webhook: body.data lÃ  array sáº£n pháº©m\nconst inputItems = $input.all()[0].json.body?.data || [];\n\n// Map dá»¯ liá»u thÃ nh format chuáº©n\nreturn inputItems.map(product => {\n  // Chuáº©n hÃ³a nhÃ³m hÃ ng -> máº£ng\n  const groupPath = (product.nganh_hang || '')\n    .split('>')\n    .map(s => s.trim())\n    .filter(Boolean);\n\n  // VAT %\n  const vat = Number(product.vat || 0);\n\n  // Há» sá» quy Äá»i (dvt_chan -> dvt_le)\n  const factor = Number(product.hsqd || product.hsgd || product.hsg || 1);\n\n  // Build payload\n  const payload = {\n    doctype: \"Item\",\n    item_code: (product.ma_sp || \"\").trim(),\n    item_name: (product.ten_sp || \"\").trim(),\n    brand: (product.nhan_hieu || \"\").trim(),\n    item_group_path: groupPath,\n    default_supplier: (product.nha_cung_cap || \"\").trim(),\n    stock_uom: (product.dvt_le || \"Nos\").trim(),\n    description: product.mo_ta || \"\",\n    is_stock_item: 1,\n    disabled: 0,\n\n    // ThÃ´ng tin xuáº¥t hÃ³a ÄÆ¡n\n    custom_invoice_item_name: product.ten_xuat_hoa_don || \"\",\n    custom_invoice_item_code: product.ma_xuat_hoa_don || \"\",\n\n    // Quy Äá»i ÄÆ¡n vá»\n    uom_conversions: {\n      big_uom: product.dvt_chan || \"\",\n      small_uom: product.dvt_le || \"\",\n      factor\n    },\n\n    // MÃ£ váº¡ch\n    barcodes: product.ma_vach ? [{\n      barcode: String(product.ma_vach),\n      barcode_type: String(product.ma_vach).length === 13 ? \"EAN-13\" : \"Code128\"\n    }] : [],\n\n    // GiÃ¡ bÃ¡n & mua\n    prices: [\n      { price_list: \"Standard Buying\",    price_list_rate: Number(product.gia_nhap || product.gia_nhap_le || 0) },\n      { price_list: \"Retail Selling\",     price_list_rate: Number(product.gia_le || 0) },\n      { price_list: \"Wholesale Selling\",  price_list_rate: Number(product.gia_chan || 0) }\n    ].filter(p => p.price_list_rate > 0),\n\n    // Thuáº¿\n    tax: { vat_percent: vat },\n\n    // HÃ¬nh áº£nh\n    images: Array.isArray(product.hinh_anh) ? product.hinh_anh.filter(Boolean) : []\n  };\n\n  return {\n    json: {\n      payload_str: JSON.stringify(payload), // â Báº¯t buá»c stringify\n      reference_doctype: \"Item\",\n      reference_name: payload.item_code,\n      operation: \"Create\",\n      retry_count: 0,\n      status: \"Pending\",\n      log_message: \"Auto-created for Item operation\",\n      create_date: new Date().toISOString(),\n      sync_time: null,\n      source_data: \"MBW DMS\"\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        16,
        64
      ],
      "id": "33071e1f-b96b-4d31-92ef-5a3db811e16f",
      "name": "Format Data Item Before Insert"
    }
  ],
  "pinData": {},
  "repo_name": "n8n-backup",
  "repo_owner": "MBW-Digital",
  "repo_path": "sinhthaihcm/",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-24T06:08:59.876Z",
      "updatedAt": "2025-09-24T06:08:59.876Z",
      "role": "workflow:owner",
      "workflowId": "gRV0dtcvjjBNS9sE",
      "projectId": "NLp1g7OOFWKDmygg"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-24T06:30:50.819Z",
  "versionId": "ebef1a55-5a16-4137-ae2c-e7e695cba617"
}