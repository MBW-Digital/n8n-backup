{
  "active": true,
  "connections": {
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "MBWD ERPNext",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "MBWD ERPNext",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MBWD ERPNext": {
      "main": [
        [
          {
            "node": "Split",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Format Data Sale Invoice To AsiaSoft",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Data Item To AsiaSoft",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Data Customer To AsiaSoft",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Data Sale Invoice Return To AsiaSoft",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Thêm mới sản phẩm": {
      "main": [
        [
          {
            "node": "Kiểm tra kết quả đồng bộ sản phẩm",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Thêm mới khách hàng": {
      "main": [
        [
          {
            "node": "Kiểm tra kết quả đồng bộ khách hàng",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Data Customer To AsiaSoft": {
      "main": [
        [
          {
            "node": "Thêm mới khách hàng",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Data Item To AsiaSoft": {
      "main": [
        [
          {
            "node": "Thêm mới sản phẩm",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Thêm mới hóa đơn": {
      "main": [
        [
          {
            "node": "Kiểm tra kết quả đồng bộ hóa đơn",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Data Sale Invoice To AsiaSoft": {
      "main": [
        [
          {
            "node": "Thêm mới hóa đơn",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Data Sale Invoice Return To AsiaSoft": {
      "main": [
        [
          {
            "node": "Thêm mới đơn trả hàng",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Thêm mới đơn trả hàng": {
      "main": [
        [
          {
            "node": "Kiểm tra kết quả đồng bộ đơn trả trả hàng",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Item Status Success": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Item Status Error": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Kiểm tra kết quả đồng bộ sản phẩm": {
      "main": [
        [
          {
            "node": "Update Item Status Success",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update Item Status Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Kiểm tra kết quả đồng bộ hóa đơn": {
      "main": [
        [
          {
            "node": "Update Sale Invoice Status Success",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update Sale Invoice Status Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Sale Invoice Status Success": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Sale Invoice Status Error": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Kiểm tra kết quả đồng bộ đơn trả trả hàng": {
      "main": [
        [
          {
            "node": "Update Sale Invoice Return Status Success",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update Sale Invoice Return Status Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Sale Invoice Return Status Success": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Sale Invoice Return Status Error": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Kiểm tra kết quả đồng bộ khách hàng": {
      "main": [
        [
          {
            "node": "Update Customer Status Success",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update Customer Return Status Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Customer Status Success": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Customer Return Status Error": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Xử lý dữ liệu",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Xử lý dữ liệu": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-18T06:38:51.733Z",
  "id": "UXQjgWHOCNvqAGq3",
  "isArchived": false,
  "meta": null,
  "name": "Đồng bộ dữ liệu AsiaSoft",
  "nodes": [
    {
      "parameters": {},
      "id": "1743c11f-8132-4740-98d7-2552b92b18be",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        3560,
        920
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes"
            }
          ]
        }
      },
      "id": "9098e6f9-0756-440c-bcd2-68816a0006f8",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        3560,
        1120
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "fields": "reference_doctype,reference_name,operation,payload,name",
        "filters": {
          "filter": [
            {
              "field": "source_data",
              "value": "MBW NEXT"
            },
            {
              "field": "status",
              "operator": "in",
              "value": "Pending"
            }
          ]
        }
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        3780,
        1020
      ],
      "id": "3c75a7f0-1381-4f57-9f58-563192a2fa8b",
      "name": "MBWD ERPNext",
      "credentials": {
        "FrappeCustomApi": {
          "id": "q04ILlO0Tw9oAhAL",
          "name": "Frappe Custom Api account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Sub Workflow",
        "height": 1732,
        "width": 2523,
        "color": 6
      },
      "id": "6a4db2ca-a084-4c25-a740-bd920d5987c0",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3000,
        1300
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "8f689f45-2b9d-44a6-8fe9-054041e3eea3",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        3200,
        2080
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.reference_doctype }}",
                    "rightValue": "Sales Invoice",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "5b540e1c-f83e-40d5-8f66-e5048107c4c5"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Sale Invoice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7f36ceb2-7aa6-4926-b403-429e5fb6847d",
                    "leftValue": "={{ $json.reference_doctype }}",
                    "rightValue": "Item",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Item"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6ce6f27d-96b1-4597-bdad-2262e2590627",
                    "leftValue": "={{ $json.reference_doctype }}",
                    "rightValue": "Customer",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Customer"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6845cb3f-4b5f-492e-ab9d-2ac511c6d94f",
                    "leftValue": "={{ $json.reference_doctype }}",
                    "rightValue": "Sales Invoice Return",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Sales Invoice Return"
            }
          ]
        },
        "options": {
          "allMatchingOutputs": false
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3540,
        2060
      ],
      "id": "a167bf54-fffb-4475-a2f8-bcab4e3c3d7e",
      "name": "Switch1",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "c57cd3de-55fe-4efc-b3ad-ff94535035c4",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        5280,
        1900
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "operation": "post",
        "path": "/mbw-asia/product",
        "body": "={{$json.requestBody}}"
      },
      "type": "CUSTOM.asiaSoft",
      "typeVersion": 1,
      "position": [
        4220,
        1480
      ],
      "id": "b039941e-909d-4929-8a7d-96020161b6a6",
      "name": "Thêm mới sản phẩm",
      "alwaysOutputData": true,
      "credentials": {
        "AsiaSoftApi": {
          "id": "BWFYog98aWKcTUW4",
          "name": "AsiaSoft account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Biến một mảng trong 1 item thành nhiều item riêng\nfunction safeParse(value) {\n  if (typeof value !== 'string') return value;\n  const s = value?.trim?.() ?? '';\n  if (!s || (s[0] !== '{' && s[0] !== '[')) return value;\n  try { return JSON.parse(s); } catch { return value; }\n}\n\nconst all = $input.all();\nlet records;\n\n// 1) Trường hợp API trả về mảng ngay ở root\nif (Array.isArray(all[0]?.json)) {\n  records = all[0].json;\n\n// 2) Hoặc gói trong thuộc tính data\n} else if (Array.isArray(all[0]?.json?.data)) {\n  records = all[0].json.data;\n\n// 3) Hoặc đã là nhiều item sẵn\n} else {\n  records = all.map(i => i.json);\n}\n\n// Nếu mỗi record có trường payload dạng string → parse sang object (không bắt buộc)\nreturn records.map(r => {\n  const parsed = ('payload' in r) ? safeParse(r.payload) : r.payload;\n  return { json: { ...r, payload: parsed } };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4000,
        1020
      ],
      "id": "94ec7251-f5ff-4bd8-b54c-8f887ed3e8cf",
      "name": "Split"
    },
    {
      "parameters": {
        "operation": "post",
        "path": "/mbw-asia/customer",
        "body": "={{$json.requestBody}}"
      },
      "type": "CUSTOM.asiaSoft",
      "typeVersion": 1,
      "position": [
        4220,
        2480
      ],
      "id": "baf1b910-c0d5-404c-bc63-d2b438f0db0d",
      "name": "Thêm mới khách hàng",
      "alwaysOutputData": true,
      "credentials": {
        "AsiaSoftApi": {
          "id": "BWFYog98aWKcTUW4",
          "name": "AsiaSoft account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let parsedPayload;\nif (typeof $json.payload === 'string') {\n  try {\n    parsedPayload = JSON.parse($json.payload);\n  } catch (e) {\n    parsedPayload = {};\n  }\n} else {\n  parsedPayload = $json.payload || {};\n}\n\n// Chuẩn hóa data cho khách hàng\nconst data = {\n  customer_id: parsedPayload.customer_code,\n  customer_code: parsedPayload.customer_code,\n  customer_name: parsedPayload.customer_name ,\n  customer_phone: parsedPayload.mobile_no,\n  customer_email: parsedPayload.email_id,\n  customer_address: parsedPayload.address || parsedPayload.primary_address || '',\n  customer_tax_code: parsedPayload.tax_id || ''\n};\n\n// Loại bỏ trường rỗng\nfor (const key in data) {\n  if (!data[key]) delete data[key];\n}\n\n// Body chuẩn cho AsiaSoft\nconst requestBody = {\n  source: 'Mobiwork',\n  branch: 'HN',\n  data\n};\n\nreturn [\n  {\n    json: {\n      ...$json,\n      payload: parsedPayload,\n      requestBody\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4000,
        2480
      ],
      "id": "ee9fad78-1708-46d7-8c48-5435b833c06f",
      "name": "Format Data Customer To AsiaSoft"
    },
    {
      "parameters": {
        "jsCode": "// Parse payload an toàn\nlet parsedPayload;\nif (typeof $json.payload === 'string') {\n  try {\n    parsedPayload = JSON.parse($json.payload);\n  } catch (e) {\n    parsedPayload = {};\n  }\n} else {\n  parsedPayload = $json.payload || {};\n}\n\n// Nếu item_group dài hơn 20 ký tự thì để trống theo yêu cầu của Kiều Asiasoft\nif (typeof parsedPayload.item_group === 'string' && parsedPayload.item_group.length > 20) {\n  parsedPayload.item_group = '';\n}\n\n// Chuẩn bị data cho AsiaSoft\nconst data = {\n  product_id: parsedPayload.item_code,\n  product_code: parsedPayload.item_code,\n  product_name: parsedPayload.item_name,\n  product_unit: parsedPayload.stock_uom,\n  product_type: 1,\n  product_group: parsedPayload.item_group\n};\n\n\n\nconst requestBody = {\n  source: 'Mobiwork',\n  branch: 'HCM',\n  data\n};\n\nreturn [\n  {\n    json: {\n      ...$json,\n      payload: parsedPayload,\n      requestBody\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4000,
        1480
      ],
      "id": "aaf702e8-18f5-48d3-affd-7b03fc36151b",
      "name": "Format Data Item To AsiaSoft"
    },
    {
      "parameters": {
        "operation": "post",
        "path": "/mbw-asia/salesinvoice",
        "body": "={{$json.requestBody}}"
      },
      "type": "CUSTOM.asiaSoft",
      "typeVersion": 1,
      "position": [
        4220,
        1880
      ],
      "id": "5417de3c-175c-4beb-9164-64fd8f3fd336",
      "name": "Thêm mới hóa đơn",
      "alwaysOutputData": true,
      "credentials": {
        "AsiaSoftApi": {
          "id": "BWFYog98aWKcTUW4",
          "name": "AsiaSoft account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Parse payload nếu là string\nlet p;\nif (typeof $json.payload === 'string') {\n  try { p = JSON.parse($json.payload); } catch { p = {}; }\n} else {\n  p = $json.payload || {};\n}\n\n// Hàm chuyển ngày từ ERPNext (YYYY-MM-DD) + posting_time thành \"YYYYMMDD HH:mm:ss\"\nconst formatDateTime = (date, time) => {\n  if (!date) return '';\n  const cleanTime = time ? time.split('.')[0] : '00:00:00';\n  return date.replace(/-/g, '') + ' ' + cleanTime;\n};\n\n// Thông tin chung\nconst invoiceId = $json.reference_name || p.name || 'AUTO';\nconst invoiceCode = invoiceId;\nconst createTime = formatDateTime(p.posting_date, p.posting_time);\n\n// Map danh sách line_items\nconst lineItems = Array.isArray(p.items) ? p.items.map((it, idx) => {\n  return {\n    invoice_id: invoiceId,\n    invoice_code: invoiceCode,\n    stt: idx + 1,\n    product_code: it.item_code,\n    product_name: it.item_name,\n    product_unit: it.uom || it.stock_uom,\n    quantity: it.qty,\n    price: it.rate,\n    percent_discount: it.discount_percentage || 0,\n    total_discount: it.discount_amount || 0,\n    tax_rate: it.item_tax_rate ? (() => {\n      try {\n        const taxObj = JSON.parse(it.item_tax_rate);\n        const firstTax = Object.values(taxObj)[0];\n        return firstTax || 0;\n      } catch {\n        return 0;\n      }\n    })() : 0,\n    total_tax: 0,  // ERPNext không luôn có trường này -> có thể tính lại nếu cần\n    total_amount: it.amount\n  };\n}) : [];\n\n// Chuẩn hóa tổng tiền\nconst subTotal = p.total || p.base_total || 0;\nconst totalTax = p.total_taxes_and_charges || 0;\nconst totalDiscount = p.discount_amount || 0;\nconst totalAmount = p.grand_total || 0;\n\n// Gói request body\nconst requestBody = {\n  source: 'Mobiwork',\n  branch: 'HN', // Hoặc dynamic theo công ty: Sinh Thái HCM -> HCM\n  data: {\n    invoice_id: invoiceId,\n    invoice_code: invoiceCode,\n    create_time: createTime,\n    customer_code: p.customer,\n    customer_name: p.customer_name,\n    customer_phone: p.contact_mobile || '',\n    customer_email: p.contact_email || '',\n    customer_tax_code: p.tax_id || '',\n    seller: p.sales_partner || 'Default Seller',\n    address: p.address_display || '',\n    note: p.remarks || '',\n    currency: p.currency || 'VND',\n    exchange_rate: p.conversion_rate || 1,\n    sub_total: subTotal,\n    total_tax: totalTax,\n    total_discounts: totalDiscount,\n    total_amount: totalAmount,\n    line_items: lineItems\n  }\n};\n\n// Loại bỏ key null/rỗng\nconst prune = (obj) => {\n  if (obj && typeof obj === 'object') {\n    Object.keys(obj).forEach(k => {\n      const v = obj[k];\n      const emptyStr = typeof v === 'string' && v.trim() === '';\n      const emptyArr = Array.isArray(v) && v.length === 0;\n      if (v === undefined || v === null || emptyStr || emptyArr) {\n        delete obj[k];\n      } else if (typeof v === 'object') {\n        prune(v);\n        if (typeof obj[k] === 'object' && !Array.isArray(obj[k]) && Object.keys(obj[k]).length === 0) {\n          delete obj[k];\n        }\n      }\n    });\n  }\n  return obj;\n};\nprune(requestBody);\n\nreturn [{\n  json: {\n    ...$json,\n    payload: p,\n    requestBody\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4000,
        1880
      ],
      "id": "ae02a110-3b03-4c9b-8fc1-2f4381898b5b",
      "name": "Format Data Sale Invoice To AsiaSoft"
    },
    {
      "parameters": {
        "jsCode": "// ---------- 1) Parse payload an toàn ----------\nlet p;\nif (typeof $json.payload === 'string') {\n  try { p = JSON.parse($json.payload); } catch { p = {}; }\n} else {\n  p = $json.payload || {};\n}\n\n// ---------- 2) Helper ----------\nconst formatDateTime = (date, time) => {\n  if (!date) return '';\n  const cleanTime = (time || '00:00:00').split('.')[0];\n  return date.replace(/-/g, '') + ' ' + cleanTime;\n};\nconst trimStr = v => (typeof v === 'string' ? v.trim() : v);\n\n// Suy ra branch theo company (tuỳ chỉnh theo thực tế)\nconst branch =\n  /HCM|Hồ Chí Minh/i.test(p.company || '') ? 'HCM'\n  : /HN|Hà Nội/i.test(p.company || '')     ? 'HN'\n  : 'HN'; // bạn có thể cố định 'HN' nếu muốn\n\n// ---------- 3) Xác định id/code hoá đơn ----------\nconst invoiceId   = trimStr($json.reference_name || p.name || 'AUTO');\nconst invoiceCode = invoiceId; // có thể map khác nếu bạn có series riêng\nconst createTime  = formatDateTime(p.posting_date, p.posting_time);\n\n// ---------- 4) Liên kết chứng từ gốc (return/đổi) ----------\nlet salesInvoiceId   = undefined;\nlet salesInvoiceCode = undefined;\n\n// Nếu là return từ ERPNext thì thường có is_return=1 và return_against là số chứng từ gốc\nif (p.is_return === 1 && p.return_against) {\n  salesInvoiceId   = trimStr(p.return_against);\n  salesInvoiceCode = trimStr(p.return_against);\n}\n\n// Cho phép override thủ công nếu bạn truyền vào từ upstream (optional)\nsalesInvoiceId   = trimStr($json.sales_invoice_id   ?? salesInvoiceId);\nsalesInvoiceCode = trimStr($json.sales_invoice_code ?? salesInvoiceCode);\n\n// ---------- 5) Map line_items ----------\nconst lineItems = (Array.isArray(p.items) ? p.items : []).map((it, idx) => ({\n  invoice_id:   invoiceId,\n  invoice_code: invoiceCode,\n  stt:          idx + 1,\n  product_code: trimStr(it.item_code),\n  product_name: trimStr(it.item_name),\n  product_unit: trimStr(it.uom || it.stock_uom),\n  quantity:     it.qty,          // âm nếu là return\n  price:        it.rate,\n  percent_discount: it.discount_percentage || 0,\n  total_discount:   it.discount_amount || 0,\n  // Nếu muốn thuế theo % per-line, đọc từ item_tax_rate (JSON string) của ERPNext\n  tax_rate: (() => {\n    try {\n      const obj = it.item_tax_rate ? JSON.parse(it.item_tax_rate) : {};\n      const first = Object.values(obj)[0];\n      return first || 0;\n    } catch { return 0; }\n  })(),\n  total_tax:    0,               // nếu cần tính: = amount * tax_rate/100 (tùy luật)\n  total_amount: it.amount        // âm nếu return\n}));\n\n// ---------- 6) Tổng tiền ----------\nconst sub_total       = p.total ?? p.base_total ?? 0;\nconst total_tax       = p.total_taxes_and_charges ?? 0;\nconst total_discounts = p.discount_amount ?? 0;\nconst total_amount    = p.grand_total ?? 0;\n\n// ---------- 7) Build requestBody theo đúng schema bạn đưa ----------\nconst requestBody = {\n  source: 'Mobiwork',\n  branch: branch,                          // hoặc cố định 'HN'\n  data: {\n    invoice_id:        invoiceId,\n    invoice_code:      invoiceCode,\n    sales_invoice_id:   salesInvoiceId,    // optional\n    sales_invoice_code: salesInvoiceCode,  // optional\n    create_time:       createTime,\n    customer_code:     trimStr(p.customer),\n    customer_name:     trimStr(p.customer_name),\n    customer_phone:    trimStr(p.contact_mobile || ''),\n    customer_email:    trimStr(p.contact_email || ''),\n    customer_tax_code: trimStr(p.tax_id || ''),\n    seller:            trimStr(p.sales_partner || ''), \n    address:           trimStr(p.address_display || ''),\n    note:              trimStr(p.remarks || ''),\n    currency:          p.currency || 'VND',\n    exchange_rate:     p.conversion_rate || 1,\n    sub_total:         sub_total,\n    total_tax:         total_tax,\n    total_discounts:   total_discounts,\n    total_amount:      total_amount,\n    line_items:        lineItems\n  }\n};\n\n// ---------- 8) Dọn rỗng ----------\nconst prune = (obj) => {\n  if (obj && typeof obj === 'object') {\n    Object.keys(obj).forEach(k => {\n      const v = obj[k];\n      const emptyStr = typeof v === 'string' && v.trim() === '';\n      const emptyArr = Array.isArray(v) && v.length === 0;\n      if (v === undefined || v === null || emptyStr || emptyArr) {\n        delete obj[k];\n      } else if (typeof v === 'object') {\n        prune(v);\n        if (!Array.isArray(obj[k]) && Object.keys(obj[k]).length === 0) delete obj[k];\n      }\n    });\n  }\n  return obj;\n};\nprune(requestBody);\n\nreturn [{ json: { ...$json, payload: p, requestBody } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4000,
        2280
      ],
      "id": "ef0d8005-40de-4600-9a8c-c3049015984b",
      "name": "Format Data Sale Invoice Return To AsiaSoft"
    },
    {
      "parameters": {
        "operation": "post",
        "path": "/mbw-asia/returninvoice",
        "body": "={{$json.requestBody}}"
      },
      "type": "CUSTOM.asiaSoft",
      "typeVersion": 1,
      "position": [
        4220,
        2280
      ],
      "id": "0469a81c-5149-47f4-b483-fc8d7b33fa9b",
      "name": "Thêm mới đơn trả hàng",
      "alwaysOutputData": true,
      "credentials": {
        "AsiaSoftApi": {
          "id": "BWFYog98aWKcTUW4",
          "name": "AsiaSoft account"
        }
      }
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "operation": "update",
        "parameters": "={\"status\":\"Success\"}",
        "recordId": "={{$node[\"Format Data Item To AsiaSoft\"].json.name}}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        4660,
        1380
      ],
      "id": "108760ba-4716-4bdb-8fb3-37c5bcbf8d13",
      "name": "Update Item Status Success",
      "credentials": {
        "FrappeCustomApi": {
          "id": "q04ILlO0Tw9oAhAL",
          "name": "Frappe Custom Api account"
        }
      }
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "operation": "update",
        "parameters": "={\"status\":\"Failed\",\"log_message\":{{ JSON.stringify($node['Thêm mới sản phẩm'].json.result_desc) }}}",
        "recordId": "={{$node[\"Format Data Item To AsiaSoft\"].json.name}}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        4660,
        1580
      ],
      "id": "5d72a292-1db9-4317-bd5e-41e261f6da61",
      "name": "Update Item Status Error",
      "credentials": {
        "FrappeCustomApi": {
          "id": "q04ILlO0Tw9oAhAL",
          "name": "Frappe Custom Api account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5a79fc46-e5bb-4a1d-8424-2adb45c2f477",
              "leftValue": "={{$json.result_code}}",
              "rightValue": "000",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4440,
        1480
      ],
      "id": "77da0da5-90ab-4d3d-8448-b83d4189b3d9",
      "name": "Kiểm tra kết quả đồng bộ sản phẩm"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5a79fc46-e5bb-4a1d-8424-2adb45c2f477",
              "leftValue": "={{$json.result_code}}",
              "rightValue": "000",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4440,
        1880
      ],
      "id": "eb9f3179-5738-4068-add9-10d8e50a26e2",
      "name": "Kiểm tra kết quả đồng bộ hóa đơn"
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "operation": "update",
        "parameters": "={\"status\":\"Success\"}",
        "recordId": "={{$node[\"Format Data Sale Invoice To AsiaSoft\"].json.name}}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        4660,
        1780
      ],
      "id": "4849803e-8d05-46b9-b2d6-afe616022619",
      "name": "Update Sale Invoice Status Success",
      "credentials": {
        "FrappeCustomApi": {
          "id": "q04ILlO0Tw9oAhAL",
          "name": "Frappe Custom Api account"
        }
      }
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "operation": "update",
        "parameters": "={\"status\":\"Failed\",\"log_message\":{{ JSON.stringify($node['Thêm mới hóa đơn'].json.result_desc) }}}",
        "recordId": "={{$node[\"Format Data Sale Invoice To AsiaSoft\"].json.name}}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        4660,
        1980
      ],
      "id": "45ed5c5a-620c-4a15-b692-1475fe94e5d6",
      "name": "Update Sale Invoice Status Error",
      "credentials": {
        "FrappeCustomApi": {
          "id": "q04ILlO0Tw9oAhAL",
          "name": "Frappe Custom Api account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5a79fc46-e5bb-4a1d-8424-2adb45c2f477",
              "leftValue": "={{$json.result_code}}",
              "rightValue": "000",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4440,
        2280
      ],
      "id": "d2df9339-03bb-4a83-820e-e39af20d408b",
      "name": "Kiểm tra kết quả đồng bộ đơn trả trả hàng"
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "operation": "update",
        "parameters": "={\"status\":\"Success\"}",
        "recordId": "={{$node[\"Format Data Sale Invoice Return To AsiaSoft\"].json.name}}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        4660,
        2180
      ],
      "id": "d60d58e7-b263-420a-a805-735662a4f30a",
      "name": "Update Sale Invoice Return Status Success",
      "credentials": {
        "FrappeCustomApi": {
          "id": "q04ILlO0Tw9oAhAL",
          "name": "Frappe Custom Api account"
        }
      }
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "operation": "update",
        "parameters": "={\"status\":\"Failed\",\"log_message\":{{ JSON.stringify($node['Thêm mới đơn trả hàng'].json.result_desc) }}}",
        "recordId": "={{$node[\"Format Data Sale Invoice Return To AsiaSoft\"].json.name}}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        4660,
        2380
      ],
      "id": "74a28a85-22e2-4b6f-8314-0690d310f605",
      "name": "Update Sale Invoice Return Status Error",
      "credentials": {
        "FrappeCustomApi": {
          "id": "q04ILlO0Tw9oAhAL",
          "name": "Frappe Custom Api account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5a79fc46-e5bb-4a1d-8424-2adb45c2f477",
              "leftValue": "={{$json.result_code}}",
              "rightValue": "000",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4460,
        2620
      ],
      "id": "512abbcb-d24e-4d8e-8f7e-1e79a9c1c837",
      "name": "Kiểm tra kết quả đồng bộ khách hàng"
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "operation": "update",
        "parameters": "={\"status\":\"Success\"}",
        "recordId": "={{$node[\"Format Data Customer To AsiaSoft\"].json.name}}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        4680,
        2580
      ],
      "id": "342639ac-947f-46ad-bbe6-951f8aee2e12",
      "name": "Update Customer Status Success",
      "credentials": {
        "FrappeCustomApi": {
          "id": "q04ILlO0Tw9oAhAL",
          "name": "Frappe Custom Api account"
        }
      }
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "operation": "update",
        "parameters": "={\"status\":\"Failed\",\"log_message\":{{ JSON.stringify($node['Thêm mới khách hàng'].json.result_desc) }}}",
        "recordId": "={{$node[\"Format Data Customer To AsiaSoft\"].json.name}}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        4680,
        2780
      ],
      "id": "457f6367-e860-49d6-8d64-b834b51d7d48",
      "name": "Update Customer Return Status Error",
      "credentials": {
        "FrappeCustomApi": {
          "id": "q04ILlO0Tw9oAhAL",
          "name": "Frappe Custom Api account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Cấu hình đồng bộ \nTài khoản: Request body\n{\n\"username\":\"mobiwork\",\n\"password\":\"8PcWX@2knWt@o^\"\n}\n\n### Thông tin cổng Test\nLink:http://asiasoft.info:90/Login\nTK:mobiwork / 123456",
        "height": 417,
        "width": 385,
        "color": 4
      },
      "id": "fe601164-4838-40d8-9ce8-fc5a08e66854",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3000,
        860
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "c561a359-d9ce-4372-b14a-746104852e6c",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        4240,
        1020
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "chatId": "5716657958",
        "text": "✅ Backup has completed - {{ $('n8n').all().length }} workflows have been processed.",
        "additionalFields": {}
      },
      "id": "f191406d-74b7-4e34-9a1a-743fe136343c",
      "name": "Telegram2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4580,
        840
      ],
      "credentials": {
        "telegramApi": {
          "id": "lJyvQ7QnjJm8ZuQD",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{$workflow.id}}",
          "cachedResultName": "={{$workflow.id}}"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        4580,
        1040
      ],
      "id": "72cad6b8-87a4-48fb-9eb2-807bd7f67811",
      "name": "Xử lý dữ liệu"
    }
  ],
  "pinData": {},
  "repo_name": "n8n-backup",
  "repo_owner": "MBW-Digital",
  "repo_path": "sinhthaihcm/",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-08-18T06:38:51.733Z",
      "updatedAt": "2025-08-18T06:38:51.733Z",
      "role": "workflow:owner",
      "workflowId": "UXQjgWHOCNvqAGq3",
      "projectId": "NLp1g7OOFWKDmygg"
    }
  ],
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-09-18T08:58:23.601Z",
  "versionId": "7e48c84a-cc50-4bfd-8c5e-914acd99247e"
}