{
  "active": false,
  "connections": {
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "MBWD ERPNext",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "MBWD ERPNext",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MBWD ERPNext": {
      "main": [
        [
          {
            "node": "Split",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Data Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Merge Data Info",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Lấy khách hàng trong ERPNext",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "[Update] Chuyển đổi dữ liệu",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "[Add] Chuyển đổi dữ liệu",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Kiểm tra xem dữ liệu có tồn": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[Update] Chuyển đổi dữ liệu": {
      "main": [
        [
          {
            "node": "Execute Workflow1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[Add] Chuyển đổi dữ liệu": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Check Customer Group",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Kiểm tra xem dữ liệu Item Group tồn tại ?": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Check DMS Customer Type",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Customer Group",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Customer Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Thêm mới Khách hàng",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow1": {
      "main": [
        [
          {
            "node": "Cập nhật Khách hàng",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Data Info": {
      "main": [
        [
          {
            "node": "Write Logs To ERPNEXT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Sync Item Status Success": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lấy khách hàng trong ERPNext": {
      "main": [
        [
          {
            "node": "Kiểm tra xem dữ liệu có tồn",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Customer Group": {
      "main": [
        [
          {
            "node": "Kiểm tra xem dữ liệu Customer Group tồn tại ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Kiểm tra xem dữ liệu Customer Group tồn tại ?": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Customer Group": {
      "main": [
        [
          {
            "node": "Check DMS Customer Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check DMS Customer Type": {
      "main": [
        [
          {
            "node": "Kiểm tra xem dữ liệu Item Group tồn tại ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Customer Type": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Thêm mới Khách hàng": {
      "main": [
        [
          {
            "node": "[Add] Chuyển đổi dữ liệu Address",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[Add] Chuyển đổi dữ liệu Address": {
      "main": [
        [
          {
            "node": "Loop Over Address",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Address": {
      "main": [
        [
          {
            "node": "Update Sync Item Status Success",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Lấy bản ghi Địa Chỉ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Thêm mới Địa chỉ": {
      "main": [
        [
          {
            "node": "Wait Loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait Loop": {
      "main": [
        [
          {
            "node": "Loop Over Address",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Xóa bản ghi Địa chỉ": {
      "main": [
        [
          {
            "node": "Thêm mới Địa chỉ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lấy bản ghi Địa Chỉ": {
      "main": [
        [
          {
            "node": "Kiểm tra xem dữ liệu Địa chỉ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Kiểm tra xem dữ liệu Địa chỉ": {
      "main": [
        [
          {
            "node": "Kiểm tra tồn tại",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Kiểm tra tồn tại": {
      "main": [
        [
          {
            "node": "Xóa bản ghi Địa chỉ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Thêm mới Địa chỉ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cập nhật Khách hàng": {
      "main": [
        [
          {
            "node": "[Update] Chuyển đổi dữ liệu Address",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[Update] Chuyển đổi dữ liệu Address": {
      "main": [
        [
          {
            "node": "Loop Over Address",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-10-04T02:02:10.952Z",
  "id": "42iWnMNVLxa44zZH",
  "isArchived": false,
  "meta": null,
  "name": "[MBW DMS] Cập nhật dữ liệu Khách hàng từ Queue sang Customer",
  "nodes": [
    {
      "parameters": {},
      "id": "9fff951c-b9bb-44bb-a7ef-1d8e4910f9d4",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -864,
        288
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes"
            }
          ]
        }
      },
      "id": "8fb8fff9-b186-4fe0-902a-9a8659cc4762",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -864,
        480
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "fields": "reference_doctype,reference_name,operation,payload,name",
        "filters": {
          "filter": [
            {
              "field": "source_data",
              "value": "MBW DMS"
            },
            {
              "field": "status",
              "operator": "in",
              "value": "Pending"
            },
            {
              "field": "reference_doctype",
              "value": "Customer"
            }
          ]
        }
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        -640,
        384
      ],
      "id": "8e79b808-cab5-488f-bea5-94d31b2b812f",
      "name": "MBWD ERPNext",
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "MBW DMS Cloud ERPNext"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Biến một mảng trong 1 item thành nhiều item riêng\nfunction safeParse(value) {\n  if (typeof value !== 'string') return value;\n  const s = value?.trim?.() ?? '';\n  if (!s || (s[0] !== '{' && s[0] !== '[')) return value;\n  try { return JSON.parse(s); } catch { return value; }\n}\n\nconst all = $input.all();\nlet records;\n\n// 1) Trường hợp API trả về mảng ngay ở root\nif (Array.isArray(all[0]?.json)) {\n  records = all[0].json;\n\n// 2) Hoặc gói trong thuộc tính data\n} else if (Array.isArray(all[0]?.json?.data)) {\n  records = all[0].json.data;\n\n// 3) Hoặc đã là nhiều item sẵn\n} else {\n  records = all.map(i => i.json);\n}\n\n// Nếu mỗi record có trường payload dạng string → parse sang object (không bắt buộc)\nreturn records.map(r => {\n  const parsed = ('payload' in r) ? safeParse(r.payload) : r.payload;\n  return { json: { ...r, payload: parsed } };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -416,
        384
      ],
      "id": "a492e32b-6a37-4ac8-b124-df93bf025ce6",
      "name": "Split"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -160,
        384
      ],
      "id": "a42c5342-2a06-40b4-8854-4f8cc03ded70",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "amount": 0.5
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2768,
        560
      ],
      "id": "de7c6beb-4a92-41df-a51f-08a11363c06e",
      "name": "Wait",
      "webhookId": "409f450b-8c1c-42db-b4c1-970930a96609"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "32c56d2b-fe41-4163-bc63-f272cfcea78a",
              "leftValue": "={{ $json.exists }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        464,
        304
      ],
      "id": "877c2f11-2eec-4f21-9dd7-a55cc65dff65",
      "name": "If",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "jsCode": "const arr = $items('Lấy khách hàng trong ERPNext'); \n\n// Kiểm tra xem item đầu tiên có field name không\nconst first = arr[0]?.json || {};\n\nreturn [{\n  json: {\n    exists: !!first.name,   // true nếu có giá trị name\n    existed_name: first.name || null,\n    data: arr[0]?.json || null,\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        240,
        304
      ],
      "id": "c056c11f-5b7f-4bc0-89e8-1a39441c499c",
      "name": "Kiểm tra xem dữ liệu có tồn"
    },
    {
      "parameters": {
        "jsCode": "// ===== Lấy dữ liệu từ node \"Loop Over Items\" =====\nconst cur = $('Loop Over Items').item.json;\n\n// Payload chính của khách hàng\nconst p = cur.payload || {};\n\n// --------------------\n// 1. Chuẩn hoá nhóm khách hàng\n// --------------------\nlet customerGroup = \"\";\nlet parentCustomerGroup = \"\";\n\nif (p.customer_group_path) {\n  const groupParts = p.customer_group_path\n    .split('>')\n    .map(s => s.trim())\n    .filter(Boolean);\n\n  if (groupParts.length > 0) {\n    customerGroup = groupParts[groupParts.length - 1]; // phần tử cuối cùng\n    if (groupParts.length > 1) {\n      parentCustomerGroup = groupParts[groupParts.length - 2]; // phần tử áp chót\n    }\n  }\n}\n\n// --------------------\n// 2. Chuẩn hoá contact\n// --------------------\nconst contact = p.contact || {};\nconst phone = (contact.phone || \"\").trim();\nconst email = (contact.email_id || \"\").trim();\n\n// --------------------\n// 3. Chuẩn hoá address (Primary, Billing, Shipping)\n// --------------------\nconst address = p.address || {};\nconst customerName = (p.customer_name || \"\").trim();\nconst customerCode = (p.customer_code || \"\").trim();\n\n// Hàm tạo address_title theo quy tắc\nfunction buildAddressTitle(prefix) {\n  return `${prefix} - ${customerName} - ${customerCode}`;\n}\n\n// Hàm tách city từ address_line1 (lấy phần tử cuối cùng sau dấu \",\")\nfunction extractCity(line1) {\n  if (!line1) return \"\";\n  const parts = line1.split(',').map(s => s.trim()).filter(Boolean);\n  return parts.length > 0 ? parts[parts.length - 1] : \"\";\n}\n\n// Primary Address\nconst primaryLine = (address.address_primary || \"\").trim();\nconst primaryAddress = {\n  address_title: buildAddressTitle(\"Địa chỉ chính\"),\n  address_type: \"Office\",\n  address_line1: primaryLine,\n  city: extractCity(primaryLine),\n  country: (address.country || \"Vietnam\").trim()\n};\n\n// Billing Address\nconst billingLine = (address.billing_address || \"\").trim();\nconst billingAddress = {\n  address_title: buildAddressTitle(\"Địa chỉ thanh toán\"),\n  address_type: \"Billing\",\n  address_line1: billingLine,\n  city: extractCity(billingLine),\n  country: (address.country || \"Vietnam\").trim()\n};\n\n// Shipping Address\nconst shippingLine = (address.address_Shipping || \"\").trim();\nconst shippingAddress = {\n  address_title: buildAddressTitle(\"Địa chỉ giao hàng\"),\n  address_type: \"Shipping\",\n  address_line1: shippingLine,\n  city: extractCity(shippingLine),\n  country: (address.country || \"Vietnam\").trim()\n};\n\n// --------------------\n// 4. Chuẩn hoá metadata\n// --------------------\nconst metadata = p.metadata || {};\n\n// --------------------\n// 5. Chuẩn hoá Customer\n// --------------------\nconst customer = {\n  reference_doctype: cur.reference_doctype || \"\",\n  reference_name: cur.reference_name || \"\",\n  operation: cur.operation || \"\",\n  name: cur.name || \"\",\n\n  // Thông tin cơ bản\n  customer_code: customerCode,\n  customer_name: customerName,\n  customer_group: customerGroup,\n  parent_customer_group: parentCustomerGroup || \"\",\n  customer_type: (p.customer_type || \"Individual\").trim(),\n  status: p.status || \"Active\",\n  credit_limit: Number(p.credit_limit || 0),\n  custom_channel: (p.custom_channel || \"\").trim(),\n\n  // Thông tin đặc biệt\n  ma_khach_hang_xuat_hoa_don: (p.ma_khach_hang_xuat_hoa_don || \"\").trim(),\n  ho_va_ten_khach_hang: (p.ho_va_ten_khach_hang || \"\").trim(),\n  phan_loai_khach_hang_ma: (p.phan_loai_khach_hang_ma || \"\").trim(),\n  phan_loai_khach_hang: (p.phan_loai_khach_hang || \"\").trim(),\n  dia_chi_xuat_hoa_don: (p.dia_chi_xuat_hoa_don || \"\").trim(),\n  mo_ta_kmxuat_hoa_don_ma: (p.mo_ta_kmxuat_hoa_don_ma || \"\").trim(),\n  mo_ta_kmxuat_hoa_don: (p.mo_ta_kmxuat_hoa_don || \"\").trim(),\n\n  // Liên hệ\n  phone: phone,\n  email: email,\n  contact_first_name: (contact.first_name || \"\").trim(),\n  contact_designation: (contact.designation || \"\").trim(),\n  contact_birthday: contact.birthday || null,\n\n  // Metadata\n  created_by: (metadata.created_by || \"\").trim(),\n  updated_by: (metadata.updated_by || \"\").trim(),\n  last_updated_at: metadata.last_updated_at || null\n};\n\n// --------------------\n// 6. Gộp dữ liệu thành Output chuẩn\n// --------------------\nconst out = {\n  customer,\n  address: [primaryAddress, billingAddress, shippingAddress]\n};\n\nreturn { json: out };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        688,
        112
      ],
      "id": "5f435a40-2cbe-4e16-adc2-c518f717d578",
      "name": "[Update] Chuyển đổi dữ liệu"
    },
    {
      "parameters": {
        "jsCode": "// ===== Lấy dữ liệu từ node \"Loop Over Items\" =====\nconst cur = $('Loop Over Items').item.json;\n\n// Payload chính của khách hàng\nconst p = cur.payload || {};\n\n// --------------------\n// 1. Chuẩn hoá nhóm khách hàng\n// --------------------\nlet customerGroup = \"\";\nlet parentCustomerGroup = \"\";\n\nif (p.customer_group_path) {\n  const groupParts = p.customer_group_path\n    .split('>')\n    .map(s => s.trim())\n    .filter(Boolean);\n\n  if (groupParts.length > 0) {\n    customerGroup = groupParts[groupParts.length - 1]; // phần tử cuối cùng\n    if (groupParts.length > 1) {\n      parentCustomerGroup = groupParts[groupParts.length - 2]; // phần tử áp chót\n    }\n  }\n}\n\n// --------------------\n// 2. Chuẩn hoá contact\n// --------------------\nconst contact = p.contact || {};\nconst phone = (contact.phone || \"\").trim();\nconst email = (contact.email_id || \"\").trim();\n\n// --------------------\n// 3. Chuẩn hoá address (Primary, Billing, Shipping)\n// --------------------\nconst address = p.address || {};\nconst customerName = (p.customer_name || \"\").trim();\nconst customerCode = (p.customer_code || \"\").trim();\n\n// Hàm tạo address_title theo quy tắc\nfunction buildAddressTitle(prefix) {\n  return `${prefix} - ${customerName} - ${customerCode}`;\n}\n\n// Hàm tách city từ address_line1 (lấy phần tử cuối cùng sau dấu \",\")\nfunction extractCity(line1) {\n  if (!line1) return \"\";\n  const parts = line1.split(',').map(s => s.trim()).filter(Boolean);\n  return parts.length > 0 ? parts[parts.length - 1] : \"\";\n}\n\n// Primary Address\nconst primaryLine = (address.address_primary || \"\").trim();\nconst primaryAddress = {\n  address_title: buildAddressTitle(\"Địa chỉ chính\"),\n  address_type: \"Office\",\n  address_line1: primaryLine,\n  city: extractCity(primaryLine),\n  country: (address.country || \"Vietnam\").trim()\n};\n\n// Billing Address\nconst billingLine = (address.billing_address || \"\").trim();\nconst billingAddress = {\n  address_title: buildAddressTitle(\"Địa chỉ thanh toán\"),\n  address_type: \"Billing\",\n  address_line1: billingLine,\n  city: extractCity(billingLine),\n  country: (address.country || \"Vietnam\").trim()\n};\n\n// Shipping Address\nconst shippingLine = (address.address_Shipping || \"\").trim();\nconst shippingAddress = {\n  address_title: buildAddressTitle(\"Địa chỉ giao hàng\"),\n  address_type: \"Shipping\",\n  address_line1: shippingLine,\n  city: extractCity(shippingLine),\n  country: (address.country || \"Vietnam\").trim()\n};\n\n// --------------------\n// 4. Chuẩn hoá metadata\n// --------------------\nconst metadata = p.metadata || {};\n\n// --------------------\n// 5. Chuẩn hoá Customer\n// --------------------\nconst customer = {\n  reference_doctype: cur.reference_doctype || \"\",\n  reference_name: cur.reference_name || \"\",\n  operation: cur.operation || \"\",\n  name: cur.name || \"\",\n\n  // Thông tin cơ bản\n  customer_code: customerCode,\n  customer_name: customerName,\n  customer_group: customerGroup,\n  parent_customer_group: parentCustomerGroup || \"\",\n  customer_type: (p.customer_type || \"Individual\").trim(),\n  status: p.status || \"Active\",\n  credit_limit: Number(p.credit_limit || 0),\n  custom_channel: (p.custom_channel || \"\").trim(),\n\n  // Thông tin đặc biệt\n  ma_khach_hang_xuat_hoa_don: (p.ma_khach_hang_xuat_hoa_don || \"\").trim(),\n  ho_va_ten_khach_hang: (p.ho_va_ten_khach_hang || \"\").trim(),\n  phan_loai_khach_hang_ma: (p.phan_loai_khach_hang_ma || \"\").trim(),\n  phan_loai_khach_hang: (p.phan_loai_khach_hang || \"\").trim(),\n  dia_chi_xuat_hoa_don: (p.dia_chi_xuat_hoa_don || \"\").trim(),\n  mo_ta_kmxuat_hoa_don_ma: (p.mo_ta_kmxuat_hoa_don_ma || \"\").trim(),\n  mo_ta_kmxuat_hoa_don: (p.mo_ta_kmxuat_hoa_don || \"\").trim(),\n\n  // Liên hệ\n  phone: phone,\n  email: email,\n  contact_first_name: (contact.first_name || \"\").trim(),\n  contact_designation: (contact.designation || \"\").trim(),\n  contact_birthday: contact.birthday || null,\n\n  // Metadata\n  created_by: (metadata.created_by || \"\").trim(),\n  updated_by: (metadata.updated_by || \"\").trim(),\n  last_updated_at: metadata.last_updated_at || null\n};\n\n// --------------------\n// 6. Gộp dữ liệu thành Output chuẩn\n// --------------------\nconst out = {\n  customer,\n  address: [primaryAddress, billingAddress, shippingAddress]\n};\n\nreturn { json: out };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        688,
        544
      ],
      "id": "b9ad6549-fc7e-49b0-8d01-62655ebae2e4",
      "name": "[Add] Chuyển đổi dữ liệu"
    },
    {
      "parameters": {
        "content": "## Sub Workflow",
        "height": 652,
        "width": 2523,
        "color": 6
      },
      "id": "fa284895-6856-45c1-9ae1-76501da9566c",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1056,
        832
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "2cfec18a-488b-452b-8476-915c847da66b",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -960,
        928
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "const arr = $items('Check DMS Customer Type'); \n\n// Kiểm tra xem item đầu tiên có field name không\nconst first = arr[0]?.json || {};\n\nreturn [{\n  json: {\n    exists: !!first.name,   // true nếu có giá trị name\n    existed_name: first.name || null,\n    data: arr[0]?.json || null,\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        272,
        912
      ],
      "id": "14d3d0ef-717b-4571-8ee9-21a23c8f0d55",
      "name": "Kiểm tra xem dữ liệu Item Group tồn tại ?"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "32c56d2b-fe41-4163-bc63-f272cfcea78a",
              "leftValue": "={{ $json.exists }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -400,
        928
      ],
      "id": "394714e7-43cc-423e-9fe6-0ec2ab90f10d",
      "name": "If1",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "32c56d2b-fe41-4163-bc63-f272cfcea78a",
              "leftValue": "={{ $json.exists }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        448,
        912
      ],
      "id": "e228bfc6-f924-4f39-8926-ed983fec28a6",
      "name": "If2",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "d804f9b1-085e-4bc8-bac6-a4b3aa54fefb",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        912,
        880
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "={{$workflow.id}}",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        880,
        544
      ],
      "id": "64d31330-6701-40dd-a070-06d523a48467",
      "name": "Execute Workflow",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{$workflow.id}}",
          "cachedResultName": "={{$workflow.id}}"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        880,
        112
      ],
      "id": "213ac72c-6b95-4539-9b4a-865d163fa1dd",
      "name": "Execute Workflow1",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "doctype": "MBWNext Integration Logs",
        "operation": "create",
        "parameters": "={\n  \"sync_type\": \"Customer\",\n  \"records_processed\": \"{{ $items().length }}\",\n  \"status\": \"Success\",\n  \"log_message\": \"\"\n}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        240,
        112
      ],
      "id": "398c2fd1-d998-4dbf-a762-2865577c4953",
      "name": "Write Logs To ERPNEXT",
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "MBW DMS Cloud ERPNext"
        }
      }
    },
    {
      "parameters": {
        "mode": "mergeByIndex",
        "join": "inner"
      },
      "name": "Merge Data Info",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "777db220-ac01-4797-8e90-3fd5b3ff642e"
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "operation": "update",
        "parameters": "={\"status\":\"Success\"}",
        "recordId": "={{ $('Loop Over Items').item.json.name }}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        2240,
        560
      ],
      "id": "0ad2b1db-d8e9-4cc9-a0a5-67159db9fea5",
      "name": "Update Sync Item Status Success",
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "MBW DMS Cloud ERPNext"
        }
      }
    },
    {
      "parameters": {
        "doctype": "Customer",
        "operation": "getById",
        "recordId": "={{ $json.payload.customer_code }}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        32,
        304
      ],
      "id": "874db4b3-d152-4b5c-9417-2b19348b69d8",
      "name": "Lấy khách hàng trong ERPNext",
      "alwaysOutputData": false,
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "MBW DMS Cloud ERPNext"
        }
      }
    },
    {
      "parameters": {
        "doctype": "Customer Group",
        "operation": "getById",
        "recordId": "={{ $json.customer.customer_group }}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        -768,
        928
      ],
      "id": "5e524485-632c-4e85-82ca-d51e9b262ccb",
      "name": "Check Customer Group",
      "alwaysOutputData": false,
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "MBW DMS Cloud ERPNext"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const arr = $items('Check Customer Group'); \n\n// Kiểm tra xem item đầu tiên có field name không\nconst first = arr[0]?.json || {};\n\nreturn [{\n  json: {\n    exists: !!first.name,   // true nếu có giá trị name\n    existed_name: first.name || null,\n    data: arr[0]?.json || null,\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -576,
        928
      ],
      "id": "eba32103-7e01-4d82-88f1-80bc0eea271e",
      "name": "Kiểm tra xem dữ liệu Customer Group tồn tại ?"
    },
    {
      "parameters": {
        "doctype": "Customer Group",
        "operation": "create",
        "parameters": "={\"customer_group_name\":\"{{$node[\"Execute Workflow Trigger\"].json.customer.customer_group}}\"}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        -224,
        1088
      ],
      "id": "e163cfe7-eeaa-4611-93c4-5173d55d099b",
      "name": "Create Customer Group",
      "alwaysOutputData": true,
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "MBW DMS Cloud ERPNext"
        }
      }
    },
    {
      "parameters": {
        "doctype": "DMS Customer Type",
        "operation": "getById",
        "recordId": "={{$node[\"Execute Workflow Trigger\"].json.customer.customer_type}}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        48,
        912
      ],
      "id": "933b9b88-2805-451b-b55b-af4ca1ee200f",
      "name": "Check DMS Customer Type",
      "alwaysOutputData": false,
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "MBW DMS Cloud ERPNext"
        }
      }
    },
    {
      "parameters": {
        "doctype": "Item Group",
        "operation": "create",
        "parameters": "={\"customer_type_id\":\"{{$node[\"Execute Workflow Trigger\"].json.customer.customer_type}}\",\"customer_type_name\":\"{{$node[\"Execute Workflow Trigger\"].json.customer.customer_type}}\"}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        672,
        1120
      ],
      "id": "e8ff48cf-2441-46cb-b375-3817d7708424",
      "name": "Create Customer Type",
      "alwaysOutputData": true,
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "MBW DMS Cloud ERPNext"
        }
      }
    },
    {
      "parameters": {
        "doctype": "Customer",
        "operation": "create",
        "parameters": "={\n  \"customer_type\": \"Company\",\n  \"custom_customer_type_dms\": \"{{ $node['[Add] Chuyển đổi dữ liệu'].json.customer.customer_type }}\",\n  \"customer_group\": \"{{ $node['[Add] Chuyển đổi dữ liệu'].json.customer.customer_group }}\",\n  \"custom_dms_sales_chanel\": \"{{ $node['[Add] Chuyển đổi dữ liệu'].json.customer.custom_channel }}\",\n  \"customer_name\": \"{{ $node['[Add] Chuyển đổi dữ liệu'].json.customer.customer_name }}\",\n  \"customer_code\": \"123\",\n  \"custom_billing_code\": \"{{ $node['[Add] Chuyển đổi dữ liệu'].json.customer.ma_khach_hang_xuat_hoa_don }}\",\n  \"custom_billing_name\": \"{{ $node['[Add] Chuyển đổi dữ liệu'].json.customer.ho_va_ten_khach_hang }}\",\n  \"custom_dms_customer_category\": \"{{ $node['[Add] Chuyển đổi dữ liệu'].json.customer.phan_loai_khach_hang }}\" , \n    \"custom_customer_type_dms\": \"{{ $node['[Add] Chuyển đổi dữ liệu'].json.customer.customer_type }}\" , \n\t  \"custom_dms_sales_chanel\": \"{{ $node['[Add] Chuyển đổi dữ liệu'].json.customer.custom_channel }}\"   , \n\t  \"territory\": \"Hà Nội\"  \n}\n"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        1040,
        544
      ],
      "id": "ccc57f86-3646-4359-9e9f-65b94be557c0",
      "name": "Thêm mới Khách hàng",
      "alwaysOutputData": false,
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "MBW DMS Cloud ERPNext"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// ===== Lấy dữ liệu từ node \"Loop Over Items\" =====\nconst cur = $('[Add] Chuyển đổi dữ liệu').item.json;\n\n\n// Kiểm tra xem có mảng address không\nif (!cur || !Array.isArray(cur.address)) {\n  return [];\n}\n\n// Trả về từng địa chỉ như một item riêng\nreturn cur.address.map(addr => ({ json: addr }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1248,
        544
      ],
      "id": "ea051bbd-4469-4c08-84db-48ef756b8603",
      "name": "[Add] Chuyển đổi dữ liệu Address",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1488,
        240
      ],
      "id": "a40d168b-6e18-47e0-b1ae-bec0c4653189",
      "name": "Loop Over Address"
    },
    {
      "parameters": {
        "doctype": "Address",
        "operation": "create",
        "parameters": "={\n  \"address_title\": \"{{ $('Loop Over Address').item.json.address_title }}\",\n  \"address_type\": \"{{ $('Loop Over Address').item.json.address_type }}\",\n  \"address_line1\": \"{{ $('Loop Over Address').item.json.address_line1 }}\",\n  \"city\": \"{{ $('Loop Over Address').item.json.city }}\",\n  \"country\": \"{{ $('Loop Over Address').item.json.country }}\",\n  \"links\": [\n    {\n      \"link_doctype\": \"Customer\",\n      \"link_name\": \"{{ $('Loop Over Items').item.json.payload.customer_code }}\",\n      \"link_title\": \"{{ $('Loop Over Items').item.json.payload.customer_code }}\"\n    }\n  ]\n}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        2352,
        272
      ],
      "id": "b59af117-f219-4392-8d71-e29e6cee37aa",
      "name": "Thêm mới Địa chỉ",
      "alwaysOutputData": false,
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "MBW DMS Cloud ERPNext"
        }
      }
    },
    {
      "parameters": {
        "amount": 0.2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2528,
        272
      ],
      "id": "66ed5299-2ce0-47ad-ba55-7b838590c58d",
      "name": "Wait Loop",
      "webhookId": "409f450b-8c1c-42db-b4c1-970930a96609"
    },
    {
      "parameters": {
        "doctype": "Address",
        "operation": "delete",
        "recordId": "={{ $json.address_title }}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        2192,
        144
      ],
      "id": "0e05c09d-8611-4d02-a38b-d4bd817f3262",
      "name": "Xóa bản ghi Địa chỉ",
      "alwaysOutputData": false,
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "MBW DMS Cloud ERPNext"
        }
      }
    },
    {
      "parameters": {
        "doctype": "Address",
        "operation": "getById",
        "recordId": "={{ $json.address_title }}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        1680,
        240
      ],
      "id": "5033e643-a380-4c66-a3be-21fb89e58b98",
      "name": "Lấy bản ghi Địa Chỉ",
      "alwaysOutputData": false,
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "MBW DMS Cloud ERPNext"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const arr = $items('Lấy bản ghi Địa Chỉ'); \n\n// Kiểm tra xem item đầu tiên có field name không\nconst first = arr[0]?.json || {};\n\nreturn [{\n  json: {\n    exists: !!first.name,   // true nếu có giá trị name\n    existed_name: first.name || null,\n    data: arr[0]?.json || null,\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1872,
        240
      ],
      "id": "5d2d72f5-04cb-4bbf-b9ed-68bd3cb3b222",
      "name": "Kiểm tra xem dữ liệu Địa chỉ"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "32c56d2b-fe41-4163-bc63-f272cfcea78a",
              "leftValue": "={{ $json.exists }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2032,
        240
      ],
      "id": "6f04136d-3753-4cfe-836c-8cd25bca5382",
      "name": "Kiểm tra tồn tại",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "doctype": "Customer",
        "operation": "update",
        "parameters": "={\n  \"customer_type\": \"Company\",\n  \"custom_customer_type_dms\": \"{{ $node['[Update] Chuyển đổi dữ liệu'].json.customer.customer_type }}\",\n  \"customer_group\": \"{{ $node['[Update] Chuyển đổi dữ liệu'].json.customer.customer_group }}\",\n  \"custom_dms_sales_chanel\": \"{{ $node['[Update] Chuyển đổi dữ liệu'].json.customer.custom_channel }}\",\n  \"customer_name\": \"{{ $node['[Update] Chuyển đổi dữ liệu'].json.customer.customer_name }}\",\n  \"customer_code\": \"{{ $node['[Update] Chuyển đổi dữ liệu'].json.customer.customer_code }}\",\n   \"customer_name\": \"{{ $node['[Update] Chuyển đổi dữ liệu'].json.customer.customer_name }}\",\n  \"custom_billing_code\": \"{{ $node['[Update] Chuyển đổi dữ liệu'].json.customer.ma_khach_hang_xuat_hoa_don }}\",\n  \"custom_billing_name\": \"{{ $node['[Update] Chuyển đổi dữ liệu'].json.customer.ho_va_ten_khach_hang }}\",\n  \"custom_dms_customer_category\": \"\" , \n    \"custom_customer_type_dms\": \"{{ $node['[Update] Chuyển đổi dữ liệu'].json.customer.customer_type }}\" , \n\t  \"custom_dms_sales_chanel\": \"{{ $node['[Update] Chuyển đổi dữ liệu'].json.customer.custom_channel }}\"   , \n\t  \"territory\": \"\"  \n}\n",
        "recordId": "={{ $('[Update] Chuyển đổi dữ liệu').item.json.customer.reference_name }}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        1024,
        112
      ],
      "id": "92968193-57fa-4f56-bd6c-7b9afab57a82",
      "name": "Cập nhật Khách hàng",
      "alwaysOutputData": false,
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "MBW DMS Cloud ERPNext"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// ===== Lấy dữ liệu từ node \"Loop Over Items\" =====\nconst cur = $('[Update] Chuyển đổi dữ liệu').item.json;\n\n\n// Kiểm tra xem có mảng address không\nif (!cur || !Array.isArray(cur.address)) {\n  return [];\n}\n\n// Trả về từng địa chỉ như một item riêng\nreturn cur.address.map(addr => ({ json: addr }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1232,
        112
      ],
      "id": "b27f9bb1-0891-4d35-baee-d3293eb38369",
      "name": "[Update] Chuyển đổi dữ liệu Address",
      "alwaysOutputData": true
    }
  ],
  "pinData": {},
  "repo_name": "n8n-backup",
  "repo_owner": "MBW-Digital",
  "repo_path": "sinhthaihcm/",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-10-04T02:02:10.952Z",
      "updatedAt": "2025-10-04T02:02:10.952Z",
      "role": "workflow:owner",
      "workflowId": "42iWnMNVLxa44zZH",
      "projectId": "NLp1g7OOFWKDmygg"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-10-04T02:44:40.579Z",
  "versionId": "b9aae2c0-52de-4fc6-a505-1d4d861666f8"
}