{
  "active": false,
  "connections": {
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "MBWD ERPNext",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "MBWD ERPNext",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Write Logs To ERPNEXT",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Kiểm tra xem dữ liệu có tồn tại",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "[Update] Chuyển đổi dữ liệu",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "[Add] Chuyển đổi dữ liệu",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[Update] Chuyển đổi dữ liệu": {
      "main": [
        [
          {
            "node": "Execute Workflow1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[Add] Chuyển đổi dữ liệu": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Check Nhãn hiệu",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Kiểm tra xem dữ liệu Brand tồn tại ?": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Kiểm tra xem dữ liệu Item Group tồn tại ?": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Check Industry",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Brand",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Write Logs Fail To ERPNEXT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Create Product",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow1": {
      "main": [
        [
          {
            "node": "Update Product",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lấy danh sách Mặt hàng của MobiworkDMS": {
      "main": [
        [
          {
            "node": "Split",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Nhãn hiệu": {
      "main": [
        [
          {
            "node": "Kiểm tra xem dữ liệu Brand tồn tại ?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Kiểm tra xem dữ liệu Brand tồn tại ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Brand": {
      "main": [
        [
          {
            "node": "Check Industry",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Industry",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Industry": {
      "main": [
        [
          {
            "node": "Kiểm tra xem dữ liệu Item Group tồn tại ?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Kiểm tra xem dữ liệu Item Group tồn tại ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Product": {
      "main": [
        [
          {
            "node": "Update status Success queue",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update status Failed queue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Kiểm tra xem dữ liệu có tồn tại": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Product": {
      "main": [
        [
          {
            "node": "Update status Success queue1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update status Failed queue1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MBWD ERPNext": {
      "main": [
        [
          {
            "node": "Lấy danh sách Mặt hàng của MobiworkDMS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update status Success queue": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update status Failed queue": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update status Success queue1": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update status Failed queue1": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Write Logs Fail To ERPNEXT": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Delete Product",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Product": {
      "main": [
        [
          {
            "node": "Update status delete Success",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update status delete Failed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update status delete Success": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update status delete Failed": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-10-19T10:33:49.150Z",
  "id": "WKGoDatApeSlxpoy",
  "isArchived": false,
  "meta": null,
  "name": "[ERPNext] Cập nhật dữ liệu Sản phẩm từ Queue Item -> DMS",
  "nodes": [
    {
      "parameters": {},
      "id": "ac5ab44a-cda1-4654-a5da-c22bfcb2af87",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -2384,
        592
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes"
            }
          ]
        }
      },
      "id": "cdb98108-1e5a-4fa2-95c9-8d9131b1a06d",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -2384,
        768
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "jsCode": "// Biến một mảng trong 1 item thành nhiều item riêng\nfunction safeParse(value) {\n  if (typeof value !== 'string') return value;\n  const s = value?.trim?.() ?? '';\n  if (!s || (s[0] !== '{' && s[0] !== '[')) return value;\n  try { return JSON.parse(s); } catch { return value; }\n}\n\nconst all = $items(\"MBWD ERPNext\");\nlet records;\n\n// 1) Trường hợp API trả về mảng ngay ở root\nif (Array.isArray(all[0]?.json)) {\n  records = all[0].json;\n\n// 2) Hoặc gói trong thuộc tính data\n} else if (Array.isArray(all[0]?.json?.data)) {\n  records = all[0].json.data;\n\n// 3) Hoặc đã là nhiều item sẵn\n} else {\n  records = all.map(i => i.json);\n}\n\n// Nếu mỗi record có trường payload dạng string → parse sang object (không bắt buộc)\nreturn records.map(r => {\n  const parsed = ('payload' in r) ? safeParse(r.payload) : r.payload;\n  return { json: { ...r, payload: parsed } };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1776,
        688
      ],
      "id": "594012d8-6e91-4b7b-8b75-51aef68cd6b7",
      "name": "Split"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1536,
        688
      ],
      "id": "d09b54a3-a8c5-4d7e-80e3-aaffc719b16e",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "amount": 0.5
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        464,
        832
      ],
      "id": "8fadf16c-ffaa-432f-b23f-03983a0f1a2d",
      "name": "Wait",
      "webhookId": "0ab5e0ab-6438-4104-a0b1-94754752156c"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "32c56d2b-fe41-4163-bc63-f272cfcea78a",
              "leftValue": "={{ $json.exists }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -896,
        688
      ],
      "id": "263a6df8-6af0-494b-892b-9bdc559e131d",
      "name": "If",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "jsCode": "const cur = $('Kiểm tra xem dữ liệu có tồn tại').item.json;\n\n// payload chính\nconst p = cur.payload || {};\n\n// lấy item_group = phần tử cuối cùng\nlet itemGroup = p.custom_item_line;\n// lấy group cha = phần tử áp chót\nlet parentItemGroup = p.custom_parent_item_group;\n\nif (Array.isArray(p.item_group_path) && p.item_group_path.length > 0) {\n  itemGroup = p.item_group_path[p.item_group_path.length - 1];\n  if (p.item_group_path.length > 1) {\n    parentItemGroup = p.item_group_path[p.item_group_path.length - 2];\n  }\n}\n\n// tìm standard_rate trong prices (ưu tiên Retail Selling)\nlet standardRate = $input.first().json.payload.standard_rate;\nif (Array.isArray(p.prices)) {\n  const retail = p.prices.find(pr => pr.price_list === \"Retail Selling\");\n  if (retail && Number(retail.price_list_rate) > 0) {\n    standardRate = retail.price_list_rate;\n  } else {\n    // fallback: lấy giá đầu tiên nếu không có Retail Selling\n    const first = p.prices[0];\n    if (first && Number(first.price_list_rate) > 0) {\n      standardRate = first.price_list_rate;\n    }\n  }\n}\n\nconst out = {\n  item_code: p.item_code,\n  item_name: p.item_name,\n  item_group: itemGroup,\n  parent_item_group: parentItemGroup,\n  stock_uom: p.stock_uom,\n  brand: p.brand || \"\",\n  custom_item_billing_code: p.custom_item_billing_code || \"\",\n  custom_item_billing_name: p.custom_item_billing_name || \"\",\n  is_stock_item: 1,\n  standard_rate: standardRate,\n  name_queue: cur.name\n};\n\n\n\nreturn { json: out };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -720,
        512
      ],
      "id": "0727bcf7-dabb-40c7-9d2a-65a0a15e1cf9",
      "name": "[Update] Chuyển đổi dữ liệu"
    },
    {
      "parameters": {
        "jsCode": "const cur = $node['Kiểm tra xem dữ liệu có tồn tại']?.json || {};\nconst p = cur.payload || {};\n\nlet itemGroup = p.custom_item_line;\nlet parentItemGroup = p.custom_parent_item_group;\n\nif (Array.isArray(p.item_group_path) && p.item_group_path.length > 0) {\n  itemGroup = p.item_group_path[p.item_group_path.length - 1];\n  if (p.item_group_path.length > 1) {\n    parentItemGroup = p.item_group_path[p.item_group_path.length - 2];\n  }\n}\n\n// tìm standard_rate trong prices (ưu tiên Retail Selling)\nlet standardRate = $input.first().json.payload.standard_rate;\nif (Array.isArray(p.prices)) {\n  const retail = p.prices.find(pr => pr.price_list === \"Retail Selling\");\n  if (retail && Number(retail.price_list_rate) > 0) {\n    standardRate = retail.price_list_rate;\n  } else {\n    // fallback: lấy giá đầu tiên nếu không có Retail Selling\n    const first = p.prices[0];\n    if (first && Number(first.price_list_rate) > 0) {\n      standardRate = first.price_list_rate;\n    }\n  }\n}\n\nconst out = {\n  item_code: p.item_code,\n  item_name: p.item_name,\n  item_group: itemGroup,\n  parent_item_group: parentItemGroup,\n  stock_uom: p.stock_uom,\n  brand: p.brand || \"\",\n  custom_item_billing_code: p.custom_invoice_item_code || \"\",\n  custom_item_billing_name: p.custom_invoice_item_name || \"\",\n  is_stock_item: 1,\n  standard_rate: standardRate,\n  name_queue: cur.name\n};\n\n\n\nreturn { json: out };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -720,
        704
      ],
      "id": "4b84a956-4236-4b61-887c-8cdda0af728d",
      "name": "[Add] Chuyển đổi dữ liệu"
    },
    {
      "parameters": {
        "content": "## Sub Workflow",
        "height": 652,
        "width": 2523,
        "color": 6
      },
      "id": "09402091-c855-4f83-ac47-460fa31c6011",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2544,
        1056
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "607d5114-958d-4e78-ab80-95d5f27c1b59",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -2400,
        1280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// Lấy brand từ input workflow\nconst inputBrand = $node[\"Execute Workflow Trigger\"].json.brand;\n\n// Lấy danh sách brand từ node \"Check Nhãn hiệu\"\nconst brands = $node['Check Nhãn hiệu'].json.data.map(u => (u.ma || '').toUpperCase());\n\n// Chuẩn hóa để so sánh\nconst normalize = s => (s ?? '').toString().trim().toUpperCase();\n\n// Tìm brand trong list\nconst match = brands.find(b => normalize(b) === normalize(inputBrand));\n\nreturn [\n  {\n    json: {\n      input_brand: inputBrand,\n      exists: !!match,\n      existed_name: match ? match.ma : null,\n      existed_data: match || null\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2016,
        1280
      ],
      "id": "87bf7073-0e5b-48fa-9dfe-90b7d6125363",
      "name": "Kiểm tra xem dữ liệu Brand tồn tại ?"
    },
    {
      "parameters": {
        "jsCode": "const inputGroup = $node[\"Execute Workflow Trigger\"].json.item_group;\n\nconst item_groups = $node['Check Industry'].json.data.map(u => (u.ma || '').toUpperCase());\n\n// Chuẩn hóa để so sánh\nconst normalize = s => (s ?? '').toString().trim().toUpperCase();\n\n// Tìm brand trong list\nconst match = item_groups.find(b => normalize(b) === normalize(inputGroup));\n\nreturn [\n  {\n    json: {\n      input_group: inputGroup,\n      exists: !!match,\n      existed_name: match ? match.ma : null,\n      existed_data: match || null\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1184,
        1264
      ],
      "id": "edc72ceb-0779-4d04-9e55-decabfdaeb70",
      "name": "Kiểm tra xem dữ liệu Item Group tồn tại ?"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "32c56d2b-fe41-4163-bc63-f272cfcea78a",
              "leftValue": "={{ $json.exists }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1840,
        1280
      ],
      "id": "7a9b5dcc-69f9-42a9-9762-4cb912854a32",
      "name": "If1",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "32c56d2b-fe41-4163-bc63-f272cfcea78a",
              "leftValue": "={{ $json.exists }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -992,
        1264
      ],
      "id": "8113c71f-8c97-4cbe-9533-c10413c66fee",
      "name": "If2",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "ce959180-034c-4bfb-8bb8-760652ccc7ad",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        -576,
        1248
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "={{$workflow.id}}",
          "mode": "id",
          "cachedResultUrl": "/workflow/=%7B%7B$workflow.id%7D%7D"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -512,
        704
      ],
      "id": "5f177af3-a6b3-4927-8834-415d3a919af5",
      "name": "Execute Workflow",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{$workflow.id}}",
          "cachedResultName": "={{$workflow.id}}"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -512,
        512
      ],
      "id": "e88c4048-a5b8-4a04-a2f7-73c55ee5611c",
      "name": "Execute Workflow1",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "doctype": "MBWNext Integration Logs",
        "operation": "create",
        "parameters": "={\n  \"sync_type\": \"Item\",\n  \"records_processed\": \"{{ $items().length }}\",\n  \"status\": \"Success\",\n  \"log_message\": \"\"\n}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        -1168,
        400
      ],
      "id": "143a1077-dba4-4e2c-8f93-45cde7d82160",
      "name": "Write Logs To ERPNEXT",
      "executeOnce": true,
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "pp.mbwnext.com"
        }
      }
    },
    {
      "parameters": {
        "resource": "product",
        "additionalFields": {}
      },
      "type": "CUSTOM.mbwdmsCustom",
      "typeVersion": 1,
      "position": [
        -1984,
        688
      ],
      "id": "5706fcda-7e6e-42a8-89bf-e6e34f29bd81",
      "name": "Lấy danh sách Mặt hàng của MobiworkDMS",
      "alwaysOutputData": true,
      "credentials": {
        "MBWDMSCustomApi": {
          "id": "LMRCQovVC82iv3i6",
          "name": "MBW DMS DEV - pp.erpnext.com"
        }
      }
    },
    {
      "parameters": {
        "resource": "brand",
        "additionalFields": {}
      },
      "type": "CUSTOM.mbwdmsCustom",
      "typeVersion": 1,
      "position": [
        -2208,
        1280
      ],
      "id": "cc33186e-31e3-4de5-bb94-cd795caecaf1",
      "name": "Check Nhãn hiệu",
      "alwaysOutputData": true,
      "credentials": {
        "MBWDMSCustomApi": {
          "id": "LMRCQovVC82iv3i6",
          "name": "MBW DMS DEV - pp.erpnext.com"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "resource": "brand",
        "operation": "create",
        "data": "={\"ma\":\"{{$node[\"Execute Workflow Trigger\"].json.brand}}\", \"ten\":\"{{$node[\"Execute Workflow Trigger\"].json.brand}}\", \"trang_thai\": true, \"stt\": 1 }"
      },
      "type": "CUSTOM.mbwdmsCustom",
      "typeVersion": 1,
      "position": [
        -1632,
        1376
      ],
      "id": "8250f661-763f-4880-a8e5-8e6ba4309e52",
      "name": "Create Brand",
      "alwaysOutputData": true,
      "credentials": {
        "MBWDMSCustomApi": {
          "id": "LMRCQovVC82iv3i6",
          "name": "MBW DMS DEV - pp.erpnext.com"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "resource": "industry",
        "additionalFields": {}
      },
      "type": "CUSTOM.mbwdmsCustom",
      "typeVersion": 1,
      "position": [
        -1408,
        1264
      ],
      "id": "a84cb941-dda3-4554-a0b3-6c0674e39782",
      "name": "Check Industry",
      "alwaysOutputData": true,
      "credentials": {
        "MBWDMSCustomApi": {
          "id": "LMRCQovVC82iv3i6",
          "name": "MBW DMS DEV - pp.erpnext.com"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "resource": "product",
        "operation": "createProduct",
        "productData": "={\n  \"stt\": 1,\n  \"nhan_hieu\": \"{{ $('[Add] Chuyển đổi dữ liệu').item.json.brand }}\",\n  \"ma_sp\": \"{{ $('[Add] Chuyển đổi dữ liệu').item.json.item_code }}\",\n  \"ten_sp\": \"{{ $('[Add] Chuyển đổi dữ liệu').item.json.item_name }}\",\n  \"nganh_hang\": \"{{ $('[Add] Chuyển đổi dữ liệu').item.json.item_group }}\",\n  \"nha_cung_cap\": \"NCC020\",\n  \"dvt_chan\": \"{{ $('[Add] Chuyển đổi dữ liệu').item.json.stock_uom }}\",\n  \"dvt_le\": \"{{ $('[Add] Chuyển đổi dữ liệu').item.json.stock_uom }}\",\n  \"hsqd\": 0,\n  \"ma_vach\": \"iujm\",\n  \"gia_nhap\": 1,\n  \"gia_nhap_le\": 1,\n  \"gia_chan\": {{ $('[Add] Chuyển đổi dữ liệu').item.json.standard_rate }},\n  \"gia_le\": {{ $('[Add] Chuyển đổi dữ liệu').item.json.standard_rate }},\n  \"vat\": 1,\n  \"mo_ta\": \" \"\n}"
      },
      "type": "CUSTOM.mbwdmsCustom",
      "typeVersion": 1,
      "position": [
        -288,
        704
      ],
      "id": "d8bc046d-b1b1-4a1a-b659-20edf670c230",
      "name": "Create Product",
      "alwaysOutputData": true,
      "credentials": {
        "MBWDMSCustomApi": {
          "id": "LMRCQovVC82iv3i6",
          "name": "MBW DMS DEV - pp.erpnext.com"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "// Code Node sau \"Merge Data Info\"\n\n// Helper chuẩn hóa chuỗi để so sánh\nconst N = s => (s ?? '').toString().trim().toUpperCase();\n\n// Lấy dữ liệu ERP đã split\nconst erpItems = $items().map(i => i.json);\nconsole.log(erpItems)\n\n// Lấy dữ liệu từ DMS\nconst dmsItems = $items(\"Lấy danh sách Mặt hàng của MobiworkDMS\").map(i => i.json);\n\n// Tạo set cho nhanh\nconst dmsSet = new Set(dmsItems.map(x => N(x.ma_sp)));\n\n// Gắn cờ exists\nreturn erpItems.map(r => {\n  const key = N(r.reference_name);\n  return {\n    json: {\n      ...r,\n      exists: dmsSet.has(key),\n      existed_name: dmsSet.has(key) ? key : null\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1280,
        640
      ],
      "id": "36953336-416e-4a10-8f4f-773bf5b0894c",
      "name": "Kiểm tra xem dữ liệu có tồn tại"
    },
    {
      "parameters": {
        "resource": "product",
        "operation": "updateProduct",
        "productData": "={\n  \"ma_cu\": \"{{ $('[Update] Chuyển đổi dữ liệu').item.json.item_code }}\",\n  \"stt\": 0,\n  \"nhan_hieu\": \"{{ $('[Update] Chuyển đổi dữ liệu').item.json.brand }}\",\n  \"ma_sp\": \"{{ $('[Update] Chuyển đổi dữ liệu').item.json.item_code }}\",\n  \"ten_sp\": \"{{ $('[Update] Chuyển đổi dữ liệu').item.json.item_name }}\",\n  \"nganh_hang\": \"{{ $('[Update] Chuyển đổi dữ liệu').item.json.item_group }}\",\n  \"nha_cung_cap\": \"SupTest1\",\n  \"dvt_chan\": \"{{ $('[Update] Chuyển đổi dữ liệu').item.json.stock_uom }}\",\n  \"dvt_le\": \"{{ $('[Update] Chuyển đổi dữ liệu').item.json.stock_uom }}\",\n  \"hsqd\": 0,\n  \"ma_vach\": \"ggbb\",\n  \"gia_nhap\": 2,\n  \"gia_nhap_le\": 2,\n  \"gia_chan\": {{ $('[Update] Chuyển đổi dữ liệu').item.json.standard_rate }},\n  \"gia_le\": {{ $('[Update] Chuyển đổi dữ liệu').item.json.standard_rate }},\n  \"vat\": 1,\n  \"mo_ta\": \" \"\n}"
      },
      "type": "CUSTOM.mbwdmsCustom",
      "typeVersion": 1,
      "position": [
        -288,
        512
      ],
      "id": "acde58d0-30d7-4339-8584-51053389d3de",
      "name": "Update Product",
      "alwaysOutputData": true,
      "credentials": {
        "MBWDMSCustomApi": {
          "id": "LMRCQovVC82iv3i6",
          "name": "MBW DMS DEV - pp.erpnext.com"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "fields": "reference_doctype,reference_name,operation,payload,name",
        "filters": {
          "filter": [
            {
              "field": "source_data",
              "value": "MBW NEXT"
            },
            {
              "field": "status",
              "operator": "in",
              "value": "Pending"
            },
            {
              "field": "reference_doctype",
              "value": "Item"
            }
          ]
        }
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        -2160,
        688
      ],
      "id": "00848cf1-139c-432c-a8b4-fd291fa683dd",
      "name": "MBWD ERPNext",
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "pp.mbwnext.com"
        }
      }
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "operation": "update",
        "parameters": "={\n\"status\": \"Success\"\n}",
        "recordId": "={{ $('[Add] Chuyển đổi dữ liệu').item.json.name_queue}}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        16,
        688
      ],
      "id": "a892cea9-631e-484b-9dea-33843e612e42",
      "name": "Update status Success queue",
      "executeOnce": false,
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "pp.mbwnext.com"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "operation": "update",
        "parameters": "={\n\"status\": \"Failed\"\n}",
        "recordId": "={{ $('[Add] Chuyển đổi dữ liệu').item.json.name_queue }}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        16,
        848
      ],
      "id": "3738ecd7-4938-49dc-800b-ae7f134d7591",
      "name": "Update status Failed queue",
      "executeOnce": false,
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "pp.mbwnext.com"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "operation": "update",
        "parameters": "={\n\"status\": \"Success\"\n}",
        "recordId": "={{ $('[Update] Chuyển đổi dữ liệu').item.json.name_queue}}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        16,
        336
      ],
      "id": "3afae7e1-305f-4e17-a96f-a1e40cae8ca5",
      "name": "Update status Success queue1",
      "executeOnce": false,
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "pp.mbwnext.com"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "operation": "update",
        "parameters": "={\n\"status\": \"Failed\"\n}",
        "recordId": "={{ $('[Update] Chuyển đổi dữ liệu').item.json.name_queue}}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        16,
        512
      ],
      "id": "e092a5b3-cb93-4b5b-8a1d-0dda9499328e",
      "name": "Update status Failed queue1",
      "executeOnce": false,
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "pp.mbwnext.com"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "doctype": "MBWNext Integration Logs",
        "operation": "create",
        "parameters": "={\n  \"sync_type\": \"Item\",\n  \"records_processed\": \"\",\n  \"status\": \"Failed\",\n  \"log_message\": \"{{$node[\"Execute Workflow Trigger\"].json.item_code}} Item Chưa đồng bộ Item Line\"\n}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        -784,
        1360
      ],
      "id": "bbcb291d-c5d6-47fd-b82e-9df988aa0c7c",
      "name": "Write Logs Fail To ERPNEXT",
      "executeOnce": false,
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "pp.mbwnext.com"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7020cdfc-08fc-482a-9ff4-f5e72c706c23",
              "leftValue": "={{ $json.operation }}",
              "rightValue": "Delete",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1104,
        640
      ],
      "id": "222ff8dd-430c-46da-bc9d-4f2b5efb364a",
      "name": "If3",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "resource": "product",
        "operation": "deleteProduct",
        "productData": "={\n  \"ma\": [\"{{ $json.payload.item_code }}\"]\n}"
      },
      "type": "CUSTOM.mbwdmsCustom",
      "typeVersion": 1,
      "position": [
        -560,
        176
      ],
      "id": "654b64fb-98d5-43e9-8f1f-a5195739a8de",
      "name": "Delete Product",
      "alwaysOutputData": true,
      "credentials": {
        "MBWDMSCustomApi": {
          "id": "2SVxatk3bkSth64j",
          "name": "MBW DMS Cloud"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "operation": "update",
        "parameters": "={\n\"status\": \"Success\"\n}",
        "recordId": "={{ $('Kiểm tra xem dữ liệu có tồn tại').item.json.name_queue }}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "1318d0a2-286c-4c01-b983-848e81b83822",
      "name": "Update status delete Success",
      "executeOnce": false,
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "pp.mbwnext.com"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "operation": "update",
        "parameters": "={\n\"status\": \"Failed\"\n}",
        "recordId": "={{ $('Kiểm tra xem dữ liệu có tồn tại').item.json.name_queue }}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        0,
        160
      ],
      "id": "d5d81d56-4262-40e5-97a7-2464e651de5a",
      "name": "Update status delete Failed",
      "executeOnce": false,
      "credentials": {
        "FrappeCustomApi": {
          "id": "IHHWnJsrVIrcNQJg",
          "name": "pp.mbwnext.com"
        }
      },
      "onError": "continueErrorOutput"
    }
  ],
  "pinData": {},
  "repo_name": "n8n-backup",
  "repo_owner": "MBW-Digital",
  "repo_path": "sinhthaihcm/",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-10-19T10:33:49.150Z",
      "updatedAt": "2025-10-19T10:33:49.150Z",
      "role": "workflow:owner",
      "workflowId": "WKGoDatApeSlxpoy",
      "projectId": "NLp1g7OOFWKDmygg"
    }
  ],
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-10-19T14:37:50.403Z",
  "versionId": "f31a8591-cd0d-4b42-b967-52f1610a23b9"
}