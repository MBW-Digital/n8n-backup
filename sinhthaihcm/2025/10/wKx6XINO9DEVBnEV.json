{
  "active": false,
  "connections": {
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "MBWD ERPNext",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "MBWD ERPNext",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MBWD ERPNext": {
      "main": [
        [
          {
            "node": "Lấy danh sách kho hàng",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Data Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Merge Data Info",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Lấy hóa đơn bán hàng trong ERPNext",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "[Update] Chuyển đổi dữ liệu",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Tìm kiếm nhân viên sale",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Kiểm tra xem dữ liệu có tồn": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[Update] Chuyển đổi dữ liệu": {
      "main": [
        [
          {
            "node": "Execute Workflow1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[Add] Chuyển đổi dữ liệu": {
      "main": [
        [
          {
            "node": "Thêm mới Hóa Đơn (SI)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Check Customer Group",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Kiểm tra xem dữ liệu Item Group tồn tại ?": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Check DMS Customer Type",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Customer Group",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Customer Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow1": {
      "main": [
        [
          {
            "node": "Cập nhật Khách hàng",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Data Info": {
      "main": [
        [
          {
            "node": "Write Logs To ERPNEXT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Sync Item Status Success": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Customer Group": {
      "main": [
        [
          {
            "node": "Kiểm tra xem dữ liệu Customer Group tồn tại ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Kiểm tra xem dữ liệu Customer Group tồn tại ?": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Customer Group": {
      "main": [
        [
          {
            "node": "Check DMS Customer Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check DMS Customer Type": {
      "main": [
        [
          {
            "node": "Kiểm tra xem dữ liệu Item Group tồn tại ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Customer Type": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cập nhật Khách hàng": {
      "main": [
        [
          {
            "node": "[Update] Chuyển đổi dữ liệu Address",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[Update] Chuyển đổi dữ liệu Address": {
      "main": [
        [
          {
            "node": "Update Sync Item Status Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lấy danh sách kho hàng": {
      "main": [
        [
          {
            "node": "Split",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "[Add] Chuyển đổi dữ liệu Log": {
      "main": [
        [
          {
            "node": "Update Sync Item Status Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Sync Order Status Error": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tìm kiếm nhân viên sale": {
      "main": [
        [
          {
            "node": "[Add] Chuyển đổi dữ liệu",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Nếu trả trước tạo phiếu thu": {
      "main": [
        [
          {
            "node": "Create Payment Entry (Sale Order)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "[Add] Chuyển đổi dữ liệu Log",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Payment Entry (Sale Order)": {
      "main": [
        [
          {
            "node": "[Add] Chuyển đổi dữ liệu Log",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lấy hóa đơn bán hàng trong ERPNext": {
      "main": [
        [
          {
            "node": "Kiểm tra xem dữ liệu có tồn",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Thêm mới Hóa Đơn (SI)": {
      "main": [
        [
          {
            "node": "Nếu trả trước tạo phiếu thu",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update Sync Order Status Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-10-07T14:37:29.516Z",
  "id": "wKx6XINO9DEVBnEV",
  "isArchived": false,
  "meta": null,
  "name": "[ERPNext] Cập nhật dữ liệu Đơn trả hàng từ Queue sang Sale Invoice Return",
  "nodes": [
    {
      "parameters": {},
      "id": "f68ec8e4-533d-4ef7-bd5d-219c0ee393e7",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -1056,
        256
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes"
            }
          ]
        }
      },
      "id": "d353dd85-a87c-4f38-8df7-e13c00531ec8",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -1056,
        480
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "fields": "reference_doctype,reference_name,operation,payload,name",
        "filters": {
          "filter": [
            {
              "field": "source_data",
              "value": "MBW DMS"
            },
            {
              "field": "status",
              "operator": "in",
              "value": "Pending"
            },
            {
              "field": "reference_doctype",
              "value": "Sales Invoice"
            }
          ]
        }
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        -800,
        400
      ],
      "id": "f48ef925-9384-45a2-97d9-212d9a798962",
      "name": "MBWD ERPNext",
      "credentials": {}
    },
    {
      "parameters": {
        "jsCode": "// Biến một mảng trong 1 item thành nhiều item riêng\nfunction safeParse(value) {\n  if (typeof value !== 'string') return value;\n  const s = value?.trim?.() ?? '';\n  if (!s || (s[0] !== '{' && s[0] !== '[')) return value;\n  try { return JSON.parse(s); } catch { return value; }\n}\n\nconst all =  $items(\"MBWD ERPNext\", 0, 0);\nlet records;\n\n// 1) Trường hợp API trả về mảng ngay ở root\nif (Array.isArray(all[0]?.json)) {\n  records = all[0].json;\n\n// 2) Hoặc gói trong thuộc tính data\n} else if (Array.isArray(all[0]?.json?.data)) {\n  records = all[0].json.data;\n\n// 3) Hoặc đã là nhiều item sẵn\n} else {\n  records = all.map(i => i.json);\n}\n\n// Nếu mỗi record có trường payload dạng string → parse sang object (không bắt buộc)\nreturn records.map(r => {\n  const parsed = ('payload' in r) ? safeParse(r.payload) : r.payload;\n  return { json: { ...r, payload: parsed } };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -416,
        400
      ],
      "id": "659a7c65-232f-48c8-8b8f-d25a6809c3bb",
      "name": "Split"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -160,
        400
      ],
      "id": "9372061e-39c8-486a-9a54-3d9adc9a5cb8",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "amount": 0.5,
        "path": "14eae99c-a807-4295-8722-4521881701c2"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2272,
        576
      ],
      "id": "f2a48eb9-92d2-4e22-a9dd-980262f9694d",
      "name": "Wait",
      "webhookId": "14eae99c-a807-4295-8722-4521881701c2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "32c56d2b-fe41-4163-bc63-f272cfcea78a",
              "leftValue": "={{ $json.exists }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        480,
        320
      ],
      "id": "c4874baa-0035-42bd-bac3-2fb8708f2c1d",
      "name": "If",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "jsCode": "const arr = $items('Lấy hóa đơn bán hàng trong ERPNext'); \n\n// Kiểm tra xem item đầu tiên có field name không\nconst first = arr[0]?.json || {};\n\nreturn [{\n  json: {\n    exists: !!first.name,   // true nếu có giá trị name\n    existed_name: first.name || null,\n    data: arr[0]?.json || null,\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        240,
        320
      ],
      "id": "4783d7e2-583f-4646-81c6-463b798899b1",
      "name": "Kiểm tra xem dữ liệu có tồn"
    },
    {
      "parameters": {
        "jsCode": "// ===== Lấy dữ liệu từ node \"Loop Over Items\" =====\nconst cur = $('Loop Over Items').item.json;\n\n// Payload chính của khách hàng\nconst p = cur.payload || {};\n\n// --------------------\n// 1. Chuẩn hoá nhóm khách hàng\n// --------------------\nlet customerGroup = \"\";\nlet parentCustomerGroup = \"\";\n\nif (p.customer_group_path) {\n  const groupParts = p.customer_group_path\n    .split('>')\n    .map(s => s.trim())\n    .filter(Boolean);\n\n  if (groupParts.length > 0) {\n    customerGroup = groupParts[groupParts.length - 1]; // phần tử cuối cùng\n    if (groupParts.length > 1) {\n      parentCustomerGroup = groupParts[groupParts.length - 2]; // phần tử áp chót\n    }\n  }\n}\n\n// --------------------\n// 2. Chuẩn hoá contact\n// --------------------\nconst contact = p.contact || {};\nconst phone = (contact.phone || \"\").trim();\nconst email = (contact.email_id || \"\").trim();\n\n// --------------------\n// 3. Chuẩn hoá address (Primary, Billing, Shipping)\n// --------------------\nconst address = p.address || {};\nconst customerName = (p.customer_name || \"\").trim();\nconst customerCode = (p.customer_code || \"\").trim();\n\n// Hàm tạo address_title theo quy tắc\nfunction buildAddressTitle(prefix) {\n  return `${prefix} - ${customerName} - ${customerCode}`;\n}\n\n// Hàm tách city từ address_line1 (lấy phần tử cuối cùng sau dấu \",\")\nfunction extractCity(line1) {\n  if (!line1) return \"\";\n  const parts = line1.split(',').map(s => s.trim()).filter(Boolean);\n  return parts.length > 0 ? parts[parts.length - 1] : \"\";\n}\n\n// Primary Address\nconst primaryLine = (address.address_primary || \"\").trim();\nconst primaryAddress = {\n  address_title: buildAddressTitle(\"Địa chỉ chính\"),\n  address_type: \"Office\",\n  address_line1: primaryLine,\n  city: extractCity(primaryLine),\n  country: (address.country || \"Vietnam\").trim()\n};\n\n// Billing Address\nconst billingLine = (address.billing_address || \"\").trim();\nconst billingAddress = {\n  address_title: buildAddressTitle(\"Địa chỉ thanh toán\"),\n  address_type: \"Billing\",\n  address_line1: billingLine,\n  city: extractCity(billingLine),\n  country: (address.country || \"Vietnam\").trim()\n};\n\n// Shipping Address\nconst shippingLine = (address.address_Shipping || \"\").trim();\nconst shippingAddress = {\n  address_title: buildAddressTitle(\"Địa chỉ giao hàng\"),\n  address_type: \"Shipping\",\n  address_line1: shippingLine,\n  city: extractCity(shippingLine),\n  country: (address.country || \"Vietnam\").trim()\n};\n\n// --------------------\n// 4. Chuẩn hoá metadata\n// --------------------\nconst metadata = p.metadata || {};\n\n// --------------------\n// 5. Chuẩn hoá Customer\n// --------------------\nconst customer = {\n  reference_doctype: cur.reference_doctype || \"\",\n  reference_name: cur.reference_name || \"\",\n  operation: cur.operation || \"\",\n  name: cur.name || \"\",\n\n  // Thông tin cơ bản\n  customer_code: customerCode,\n  customer_name: customerName,\n  customer_group: customerGroup,\n  parent_customer_group: parentCustomerGroup || \"\",\n  customer_type: (p.customer_type || \"Individual\").trim(),\n  status: p.status || \"Active\",\n  credit_limit: Number(p.credit_limit || 0),\n  custom_channel: (p.custom_channel || \"\").trim(),\n\n  // Thông tin đặc biệt\n  ma_khach_hang_xuat_hoa_don: (p.ma_khach_hang_xuat_hoa_don || \"\").trim(),\n  ho_va_ten_khach_hang: (p.ho_va_ten_khach_hang || \"\").trim(),\n  phan_loai_khach_hang_ma: (p.phan_loai_khach_hang_ma || \"\").trim(),\n  phan_loai_khach_hang: (p.phan_loai_khach_hang || \"\").trim(),\n  dia_chi_xuat_hoa_don: (p.dia_chi_xuat_hoa_don || \"\").trim(),\n  mo_ta_kmxuat_hoa_don_ma: (p.mo_ta_kmxuat_hoa_don_ma || \"\").trim(),\n  mo_ta_kmxuat_hoa_don: (p.mo_ta_kmxuat_hoa_don || \"\").trim(),\n\n  // Liên hệ\n  phone: phone,\n  email: email,\n  contact_first_name: (contact.first_name || \"\").trim(),\n  contact_designation: (contact.designation || \"\").trim(),\n  contact_birthday: contact.birthday || null,\n\n  // Metadata\n  created_by: (metadata.created_by || \"\").trim(),\n  updated_by: (metadata.updated_by || \"\").trim(),\n  last_updated_at: metadata.last_updated_at || null\n};\n\n// --------------------\n// 6. Gộp dữ liệu thành Output chuẩn\n// --------------------\nconst out = {\n  customer,\n  address: [primaryAddress, billingAddress, shippingAddress]\n};\n\nreturn { json: out };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        704,
        128
      ],
      "id": "41266946-b06f-4962-9309-29bff24a7a24",
      "name": "[Update] Chuyển đổi dữ liệu"
    },
    {
      "parameters": {
        "jsCode": "// ===== Lấy dữ liệu từ node \"Loop Over Items\" =====\nconst cur = $('Loop Over Items').item.json;\nconst p = cur.payload || {};\n\n// ===== Lấy map kho từ node \"ERPNext Warehouses\" =====\nconst warehouses = $('Lấy danh sách kho hàng').item.json;\n\n// Hàm tìm kho theo custom_warehouse_code\nfunction findWarehouseName(code) {\n  if (!code) return null;\n  const w = warehouses.find(w => w.custom_warehouse_code === code);\n  return w ? w.name : null;\n}\n\n// --------------------\n// Hàm format ngày về \"YYYY-MM-DD\"\n// --------------------\nfunction formatDate(dateStr) {\n  if (!dateStr) return null;\n  try {\n    const d = new Date(dateStr);\n    if (isNaN(d.getTime())) return null;\n    return d.toISOString().split('T')[0];\n  } catch {\n    return null;\n  }\n}\n\n// --------------------\n// 1. Chuẩn hoá danh sách sản phẩm\n// --------------------\nconst mainProducts = Array.isArray(p.san_pham) ? p.san_pham : [];\nconst promoProducts = Array.isArray(p.san_pham_km) ? p.san_pham_km : [];\npromoProducts.forEach(sp => sp.is_km = true);\nconst products = [...mainProducts, ...promoProducts];\n\nconst allProducts = products.map(sp => ({\n  item_code: (sp.ma_sp || sp.ma_sp_km || \"\").trim(),\n  item_name: (sp.ten_sp || sp.ten_sp_km || \"\").trim(),\n  warehouse: (sp.ma_kho_xuat || sp.ma_kho_xuat_km || \"\").trim(),\n  qty: Number(sp.so_luong || sp.so_luong_km || 0),\n  rate: sp.is_km ? 0 : Number(sp.don_gia || 0),\n  amount: sp.is_km ? 0 : Number(sp.thanh_tien || 0),\n  discount_amount: Number(sp.chiet_khau || 0),\n  discount_npp: Number(sp.chiet_khau_npp || 0),\n  vat_rate: Number(sp.vat_sp || 0),\n  note: (sp.ghi_chu || sp.ghi_chu_km || \"\").trim(),\n  is_promotion: !!sp.is_km,\n  promotion_code: (sp.ctkm || \"\").trim()\n}));\n\n// --------------------\n// 2. Chuẩn hoá thông tin đơn hàng\n// --------------------\nconst saleOrder = {\n  reference_doctype: cur.reference_doctype || \"Sales Invoice\",\n  reference_name: cur.reference_name || \"\",\n  operation: cur.operation || \"Create\",\n  name: cur.name || \"\",\n  order_code: (p.ma_phieu || \"\").trim(),\n  customer_code: (p.ma_kh || \"\").trim(),\n  customer_name: (p.ten_kh || \"\").trim(),\n  phone: (p.sdt || \"\").trim(),\n  address: (p.dia_chi || \"\").trim(),\n\n  order_status: \"To Deliver and Bill\",\n  order_date: formatDate(p.ngay_dat),\n\n  total_amount: Number(p.tong_tien_hang || 0),\n  total_tax: Number(p.tong_tien_vat || 0),\n  order_discount: Number(p.ck_don_hang || 0),\n  grand_total: Number(p.phai_thanh_toan || 0),\n\n  // 💰 Debit (thanh toán trước)\n  debit: Number(p.thanh_toan_truoc || p.debit || p.tra_truoc || 0),\n\n  customer_group_code: (p.ma_nhom || \"\").trim(),\n  customer_group_name: (p.ten_nhom || \"\").trim(),\n\n  order_by: (p.ten_nguoi_dat || \"\").trim(),\n  approved_by: (p.nguoi_duyet || \"\").trim(),\n  approval_date: formatDate(p.ngay_duyet),\n\n  created_by: (p.nguoi_tao || \"\").trim(),\n  created_at: formatDate(p.ngay_tao),\n  updated_by: (p.nguoi_sua || \"\").trim(),\n  updated_at: formatDate(p.ngay_sua),\n\n  invoice_address: (p.dia_chi_xuat_hoa_don || \"\").trim(),\n  invoice_code: (p.ma_xuat_hoa_don || \"\").trim(),\n  tax_code: (p.ma_so_thue || \"\").trim(),\n  cccd: (p.cccd || \"\").trim(),\n  thue15: Number(p.thue15 || 0),\n  invoice_name: (p.ten_xuat_hoa_don || \"\").trim()\n};\n\n// --------------------\n// 3. Chuẩn hoá custom_promotion từ p.promotion\n// --------------------\nconst promotions = [];\nif (Array.isArray(p.promotion)) {\n  for (const km of p.promotion) {\n    for (const pr of km.product || []) {\n      promotions.push({\n        promotion_code: km.id || \"\",\n        promotion_name: km.ten_khuyen_mai || \"\",\n        promotion_type: km.ptype?.value || \"\",\n        item_code: pr.ma_san_pham || \"\",\n        item_name: pr.ten_san_pham || \"\",\n        promo_qty: Number(pr.so_luong) || 0,\n        uom: pr.don_vi_tinh?.viewData || \"\",\n        discount_amount: 0\n      });\n    }\n  }\n}\n\n// --------------------\n// 5. Ghép lại payload cho ERPNext\n// --------------------\nconst erpNextPayload = {\n  docstatus: 1,\n  doctype: \"Sales Invoice\",\n  custom_sales_person:\n    ($input.first()?.json?.['0']?.employee_name || \"\") + \"_\" +\n    ($input.first()?.json?.['0']?.employee || \"\"),\n  transaction_date: saleOrder.order_date,\n  delivery_date: saleOrder.order_date,\n\n  order_type: \"Sales\",\n\n  ignore_pricing_rule: true,\n  customer: saleOrder.customer_code,\n  custom_customer_code: saleOrder.customer_code,\n  custom_sales_order_dms_id: saleOrder.order_code,\n  custom_customer_group_code: saleOrder.customer_group_code,\n  custom_customer_group_name: saleOrder.customer_group_name,\n\n  contact_mobile: saleOrder.phone,\n  contact_address: saleOrder.address,\n\n  custom_order_by: saleOrder.order_by,\n  custom_approved_by: saleOrder.approved_by,\n  custom_approval_date: saleOrder.approval_date,\n\n  custom_created_by: saleOrder.created_by,\n  custom_created_at: saleOrder.created_at,\n  custom_updated_by: saleOrder.updated_by,\n  custom_updated_at: saleOrder.updated_at,\n\n  custom_invoice_address: saleOrder.invoice_address,\n  custom_customer_billing_code: saleOrder.invoice_code,\n  custom_tax_code: saleOrder.tax_code,\n  custom_personal_id_number: saleOrder.cccd,\n  custom_customer_billing_name: saleOrder.invoice_name,\n\n  total: saleOrder.total_amount,\n  total_taxes_and_charges: saleOrder.total_tax,\n  discount_amount: saleOrder.order_discount,\n  grand_total: saleOrder.grand_total,\n\n  // 💵 Mapping thêm field debit\n  custom_debit: saleOrder.debit,\n\n  // ✅ Danh sách sản phẩm\n  items: allProducts.map(item => {\n    const base = {\n      item_code: item.item_code,\n      item_name: item.item_name,\n      warehouse: findWarehouseName(item.warehouse),\n      qty: item.qty,\n      rate: item.rate,\n      amount: item.amount,\n      discount_amount: item.discount_amount,\n      is_free_item: item.is_promotion ? 1 : 0,\n      custom_promotion_code: item.promotion_code,\n      description: item.note\n    };\n    if (item.is_promotion) base.price_list_rate = 0;\n    return base;\n  }),\n\n  custom_promotion: promotions\n};\n\n// --------------------\n// 6. Trả dữ liệu ra ngoài\n// --------------------\nreturn { json: erpNextPayload };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        896,
        512
      ],
      "id": "de24eadf-580c-4e31-8d9d-b560e5572976",
      "name": "[Add] Chuyển đổi dữ liệu"
    },
    {
      "parameters": {
        "content": "## Sub Workflow",
        "height": 652,
        "width": 2523,
        "color": 6
      },
      "id": "9ee4b6cc-2d99-498a-9ca5-c88579614ce2",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1040,
        800
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "1b6e2fb8-2e7b-4716-8ac4-fe141e4bf12a",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -960,
        944
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "const arr = $items('Check DMS Customer Type'); \n\n// Kiểm tra xem item đầu tiên có field name không\nconst first = arr[0]?.json || {};\n\nreturn [{\n  json: {\n    exists: !!first.name,   // true nếu có giá trị name\n    existed_name: first.name || null,\n    data: arr[0]?.json || null,\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        288,
        928
      ],
      "id": "92e62f15-8391-4e81-a66a-d7650710deba",
      "name": "Kiểm tra xem dữ liệu Item Group tồn tại ?"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "32c56d2b-fe41-4163-bc63-f272cfcea78a",
              "leftValue": "={{ $json.exists }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -400,
        944
      ],
      "id": "48f63cde-f18d-4aad-be05-18fc003bfb20",
      "name": "If1",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "32c56d2b-fe41-4163-bc63-f272cfcea78a",
              "leftValue": "={{ $json.exists }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        464,
        928
      ],
      "id": "58850905-9ec9-418d-b891-fb6c5bd76cfa",
      "name": "If2",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "34dd7edc-692a-4564-bde0-27921b05aae0",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        928,
        880
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{$workflow.id}}",
          "cachedResultName": "={{$workflow.id}}"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        880,
        128
      ],
      "id": "e1295a8a-955f-44b7-a1e0-8425d87fe6e8",
      "name": "Execute Workflow1",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "doctype": "MBWNext Integration Logs",
        "operation": "create",
        "parameters": "={\n  \"sync_type\": \"Item\",\n  \"records_processed\": \"{{ $items().length }}\",\n  \"status\": \"Success\",\n  \"log_message\": \"\"\n}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        240,
        128
      ],
      "id": "827afa27-4ce5-4ec5-8d67-caf218e87b13",
      "name": "Write Logs To ERPNEXT",
      "credentials": {}
    },
    {
      "parameters": {
        "mode": "mergeByIndex",
        "join": "inner"
      },
      "name": "Merge Data Info",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "2f0b5fa5-1d92-4f73-ac35-779e2092244e"
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "operation": "update",
        "parameters": "={\"status\":\"Success\"}",
        "recordId": "={{ $('Loop Over Items').item.json.name }}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        2016,
        128
      ],
      "id": "5ce1dd34-a183-4efe-9e9b-27b7a4bf5ea9",
      "name": "Update Sync Item Status Success",
      "credentials": {}
    },
    {
      "parameters": {
        "doctype": "Customer Group",
        "operation": "getById",
        "recordId": "={{ $json.customer.customer_group }}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        -768,
        944
      ],
      "id": "557d0b63-3ceb-48f7-ac03-9e205412ae37",
      "name": "Check Customer Group",
      "alwaysOutputData": false,
      "credentials": {}
    },
    {
      "parameters": {
        "jsCode": "const arr = $items('Check Customer Group'); \n\n// Kiểm tra xem item đầu tiên có field name không\nconst first = arr[0]?.json || {};\n\nreturn [{\n  json: {\n    exists: !!first.name,   // true nếu có giá trị name\n    existed_name: first.name || null,\n    data: arr[0]?.json || null,\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -576,
        944
      ],
      "id": "895f49bf-6c89-4948-a5e2-9f98b21fa59f",
      "name": "Kiểm tra xem dữ liệu Customer Group tồn tại ?"
    },
    {
      "parameters": {
        "doctype": "Customer Group",
        "operation": "create",
        "parameters": "={\"customer_group_name\":\"{{$node[\"Execute Workflow Trigger\"].json.customer.customer_group}}\"}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        -224,
        1104
      ],
      "id": "55e26d67-21ba-445d-926a-15b997fc3c6f",
      "name": "Create Customer Group",
      "alwaysOutputData": true,
      "credentials": {}
    },
    {
      "parameters": {
        "doctype": "DMS Customer Type",
        "operation": "getById",
        "recordId": "={{$node[\"Execute Workflow Trigger\"].json.customer.customer_type}}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        48,
        928
      ],
      "id": "34aa9676-07e6-4a71-b87c-c14a448f6a01",
      "name": "Check DMS Customer Type",
      "alwaysOutputData": false,
      "credentials": {}
    },
    {
      "parameters": {
        "doctype": "Item Group",
        "operation": "create",
        "parameters": "={\"customer_type_id\":\"{{$node[\"Execute Workflow Trigger\"].json.customer.customer_type}}\",\"customer_type_name\":\"{{$node[\"Execute Workflow Trigger\"].json.customer.customer_type}}\"}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        688,
        1120
      ],
      "id": "6b42e62e-5041-4869-b2fe-48af06b613e8",
      "name": "Create Customer Type",
      "alwaysOutputData": true,
      "credentials": {}
    },
    {
      "parameters": {
        "doctype": "Customer",
        "operation": "update",
        "parameters": "={\n  \"customer_type\": \"Company\",\n  \"custom_customer_type_dms\": \"{{ $node['[Update] Chuyển đổi dữ liệu'].json.customer.customer_type }}\",\n  \"customer_group\": \"{{ $node['[Update] Chuyển đổi dữ liệu'].json.customer.customer_group }}\",\n  \"custom_dms_sales_chanel\": \"{{ $node['[Update] Chuyển đổi dữ liệu'].json.customer.custom_channel }}\",\n  \"customer_name\": \"{{ $node['[Update] Chuyển đổi dữ liệu'].json.customer.customer_name }}\",\n  \"customer_code\": \"{{ $node['[Update] Chuyển đổi dữ liệu'].json.customer.customer_code }}\",\n   \"customer_name\": \"{{ $node['[Update] Chuyển đổi dữ liệu'].json.customer.customer_name }}\",\n  \"custom_billing_code\": \"{{ $node['[Update] Chuyển đổi dữ liệu'].json.customer.ma_khach_hang_xuat_hoa_don }}\",\n  \"custom_billing_name\": \"{{ $node['[Update] Chuyển đổi dữ liệu'].json.customer.ho_va_ten_khach_hang }}\",\n  \"custom_dms_customer_category\": \"\" , \n    \"custom_customer_type_dms\": \"{{ $node['[Update] Chuyển đổi dữ liệu'].json.customer.customer_type }}\" , \n\t  \"custom_dms_sales_chanel\": \"{{ $node['[Update] Chuyển đổi dữ liệu'].json.customer.custom_channel }}\"   , \n\t  \"territory\": \"\"  \n}\n",
        "recordId": "={{ $('[Update] Chuyển đổi dữ liệu').item.json.customer.customer_name }}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        1040,
        128
      ],
      "id": "34b80519-f29f-423a-85be-28dd069b8743",
      "name": "Cập nhật Khách hàng",
      "alwaysOutputData": false,
      "credentials": {}
    },
    {
      "parameters": {
        "jsCode": "// ===== Lấy dữ liệu từ node \"Loop Over Items\" =====\nconst cur = $('[Update] Chuyển đổi dữ liệu').item.json;\n\n\n// Kiểm tra xem có mảng address không\nif (!cur || !Array.isArray(cur.address)) {\n  return [];\n}\n\n// Trả về từng địa chỉ như một item riêng\nreturn cur.address.map(addr => ({ json: addr }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1248,
        128
      ],
      "id": "6b2e4b44-404b-4938-9a19-5fb9104ca7f8",
      "name": "[Update] Chuyển đổi dữ liệu Address",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "doctype": "Warehouse",
        "fields": "name,custom_warehouse_code"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        -608,
        400
      ],
      "id": "cb50553e-d282-49e7-b0f9-9e27a19a2eae",
      "name": "Lấy danh sách kho hàng",
      "credentials": {}
    },
    {
      "parameters": {
        "jsCode": "// ===== Lấy dữ liệu từ node \"Loop Over Items\" =====\nconst cur = $('[Add] Chuyển đổi dữ liệu').item.json;\n\n\n// Kiểm tra xem có mảng address không\nif (!cur || !Array.isArray(cur.address)) {\n  return [];\n}\n\n// Trả về từng địa chỉ như một item riêng\nreturn cur.address.map(addr => ({ json: addr }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1888,
        400
      ],
      "id": "97c3f5c5-4721-4c7c-96d3-9c7212f09d4a",
      "name": "[Add] Chuyển đổi dữ liệu Log",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "doctype": "MBWNext Data Sync Queue",
        "operation": "update",
        "parameters": "={\"status\":\"Failed\"}",
        "recordId": "={{ $('Loop Over Items').item.json.name }}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        1600,
        576
      ],
      "id": "20c3602e-ad56-46c4-a043-b54198e8ca9e",
      "name": "Update Sync Order Status Error",
      "credentials": {}
    },
    {
      "parameters": {
        "doctype": "Employee",
        "operation": "find",
        "query": "={\"employee_name\":\" {{ $('Loop Over Items').item.json.payload.ten_nguoi_dat }}\"}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        672,
        512
      ],
      "id": "ce6ffacd-845f-41ee-9dee-e8c74dc7220d",
      "name": "Tìm kiếm nhân viên sale",
      "alwaysOutputData": false,
      "retryOnFail": false,
      "credentials": {},
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "32c56d2b-fe41-4163-bc63-f272cfcea78a",
              "leftValue": "={{ $('[Add] Chuyển đổi dữ liệu').item.json.custom_debit }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            },
            {
              "id": "8fa6310e-7fc5-47b5-9df3-426bfeda34fc",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1328,
        384
      ],
      "id": "0eea169c-2c7c-4689-a2a7-ca1cab07bbed",
      "name": "Nếu trả trước tạo phiếu thu",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "doctype": "Payment Entry",
        "operation": "create",
        "parameters": "={\n  \"payment_type\": \"Receive\",\n  \"party_type\": \"Customer\",\n  \"party\": \"{{ $('Thêm mới Hóa Đơn (SI)').item.json.customer }}\",\n  \"party_name\": \"{{ $('Thêm mới Hóa Đơn (SI)').item.json.customer_name }}\",\n  \"paid_amount\": {{ $('[Add] Chuyển đổi dữ liệu').item.json.custom_debit }},\n   \"received_amount\": {{ $('[Add] Chuyển đổi dữ liệu').item.json.custom_debit }},\n  \"paid_to\": \"1111 - Tiền Việt Nam - TEST\",\n  \"paid_to_account_currency\": \"VND\",\n  \"mode_of_payment\":\"Cash\",\n  \"docstatus\": 0,\n  \"references\": [\n    {\n      \"reference_doctype\": \"Sales Invoice\",\n      \"reference_name\": \"{{ $('Thêm mới Hóa Đơn (SI)').item.json.name }}\",\n      \"doctype\": \"Payment Entry Reference\",\n      \"allocated_amount\": {{ $('[Add] Chuyển đổi dữ liệu').item.json.custom_debit }}\n    }\n  ]\n}\n"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        1600,
        288
      ],
      "id": "daf47d73-d07a-454f-a5af-468005c24fc2",
      "name": "Create Payment Entry (Sale Order)",
      "credentials": {}
    },
    {
      "parameters": {
        "doctype": "Sales Invoice",
        "operation": "find",
        "query": "={\"custom_sales_invoice_dms_id\":\"{{ $json.payload[\"0\"].ma_phieu }}\"} "
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        48,
        320
      ],
      "id": "95de1cad-aa54-4417-8cca-071ded28f3a5",
      "name": "Lấy hóa đơn bán hàng trong ERPNext",
      "alwaysOutputData": false,
      "credentials": {}
    },
    {
      "parameters": {
        "doctype": "Sales Invoice",
        "operation": "create",
        "parameters": "={{ JSON.stringify($node[\"[Add] Chuyển đổi dữ liệu\"].json) }}"
      },
      "type": "CUSTOM.frappeCustom",
      "typeVersion": 1,
      "position": [
        1120,
        512
      ],
      "id": "19408c1b-7338-4f0e-866f-8eed703cf6ea",
      "name": "Thêm mới Hóa Đơn (SI)",
      "alwaysOutputData": false,
      "retryOnFail": false,
      "credentials": {},
      "onError": "continueErrorOutput"
    }
  ],
  "pinData": {},
  "repo_name": "n8n-backup",
  "repo_owner": "MBW-Digital",
  "repo_path": "sinhthaihcm/",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-10-07T14:37:29.516Z",
      "updatedAt": "2025-10-07T14:37:29.516Z",
      "role": "workflow:owner",
      "workflowId": "wKx6XINO9DEVBnEV",
      "projectId": "NLp1g7OOFWKDmygg"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-09-03T07:48:49.315Z",
      "updatedAt": "2025-09-03T07:48:49.315Z",
      "id": "HmMyDMy8FTsYQkDm",
      "name": "ERPNext"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-10-07T14:37:29.516Z",
  "versionId": "bdc93010-a8a5-403e-a1ee-cc1ae5098e06"
}