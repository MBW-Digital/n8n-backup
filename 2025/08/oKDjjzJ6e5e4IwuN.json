{
  "active": false,
  "connections": {
    "n8n": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Config": {
      "main": [
        [
          {
            "node": "Get file data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Get File": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is new": {
      "main": [
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Create sub path",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "main": [
        [
          {
            "node": "Same file - Do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file data": {
      "main": [
        [
          {
            "node": "If file too large",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create sub path": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          },
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          },
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Telegram3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is different": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If file too large": {
      "main": [
        [
          {
            "node": "Get File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Telegram3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Same file - Do nothing": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram3": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-15T08:58:07.559Z",
  "id": "oKDjjzJ6e5e4IwuN",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Backup Workflow To GitHub",
  "nodes": [
    {
      "parameters": {},
      "id": "eb54001a-5642-4920-b530-bd0773a17bcb",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        940,
        540
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Subworkflow",
        "height": 731.7039821513649,
        "width": 2002.8290535857614,
        "color": 6
      },
      "id": "7c438a36-7f0d-497b-97eb-55150285cc84",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        408,
        920
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "a714d9cf-1c12-4014-b23d-2618ebcdbb8d",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        480,
        1100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "182eb64e-b91a-4824-b13e-fb627a9e2d41",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        1340,
        640
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "TaCec984BadVZPFs",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "9f0b935d-d100-4dfb-a057-e437c6a6eb61",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        2180,
        1120
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "id": "443fc49c-fff4-472d-825c-324105f2d6cc",
      "name": "Get File",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1140,
        1000
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "45ce825e-9fa6-430c-8931-9aaf22c42585",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": ""
            },
            {
              "id": "9619a55f-7fb1-4f24-b1a7-7aeb82365806",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "d49eb2e0-bc76-42bd-9bdd-98473af7aad9",
      "name": "If file too large",
      "type": "n8n-nodes-base.if",
      "position": [
        900,
        1020
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "4d572c14-f892-4e6f-960f-c8568d8dc132",
      "name": "Merge Items",
      "type": "n8n-nodes-base.merge",
      "position": [
        900,
        1280
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"
      },
      "id": "d2ffa837-cc93-4b12-b9f8-f363e86acf0c",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        1100,
        1280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json.github_status}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "8c11a3e7-b322-4e6a-b218-c30d45d8b8ee",
      "name": "Check Status",
      "type": "n8n-nodes-base.switch",
      "position": [
        1500,
        1280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "9579fc9d-742c-4dc2-983c-8d36af29d32c",
      "name": "Same file - Do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1720,
        1120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "4a9e558b-43c9-40f5-99e9-b2c3f76f63c7",
      "name": "File is different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1720,
        1280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "d2beb0e7-d842-4309-acc3-e0ebb7072787",
      "name": "File is new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1720,
        1480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_owner }}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_name }}",
          "mode": "name"
        },
        "filePath": "={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "9509472d-4a10-4d22-aac5-d4fa766f3bf8",
      "name": "Create new file",
      "type": "n8n-nodes-base.github",
      "position": [
        1940,
        1480
      ],
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "i0ZoAWs05nqXR0aX",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_owner }}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_name }}",
          "mode": "name"
        },
        "filePath": "={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "9f3a0615-ffca-43f4-aeff-e0ec91f2aa21",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        1940,
        1280
      ],
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "i0ZoAWs05nqXR0aX",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "932396a4-4982-4f2a-b041-06ece4fd62dd",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1540,
        640
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 1,
              "triggerAtMinute": 33
            }
          ]
        }
      },
      "id": "81f9f3f0-61a5-4e3d-8681-ceaa606220df",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        940,
        740
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dae43d3b-56e5-4098-b602-862ebf5cd073",
              "name": "subPath",
              "type": "string",
              "value": "={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "c9ea85af-e452-4523-bd13-d3e4f82113f1",
      "name": "Create sub path",
      "type": "n8n-nodes-base.set",
      "position": [
        1300,
        1280
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "content": "## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `YYYY/MM/` for the directory path and `ID.json` for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set using the **Variables** feature but can be replaced with the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\n### Time to Run\nTested with 1423 workflows on `1.44.1` it took under 30 minutes for the first run and under 12 minutes once the initial run is complete.",
        "height": 417,
        "width": 385,
        "color": 4
      },
      "id": "25816a64-9793-4ef3-8059-861719ed104f",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        400,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Main workflow loop",
        "height": 440.50019039253914,
        "width": 1590.0907420635438,
        "color": 7
      },
      "id": "a31afa15-0c92-4d9f-9447-23366a52fea6",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        818,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "workflowId": "={{ $workflow.id }}",
        "mode": "each",
        "options": {}
      },
      "id": "9abc96b7-deed-4516-bf49-eb329bd69fb4",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        1760,
        660
      ],
      "typeVersion": 1,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_owner }}",
          "mode": ""
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_name }}",
          "mode": ""
        },
        "filePath": "={{ $('Config').first().json.repo_path }}\n{{ ( ($json.createdAt || $json.updatedAt || $now).toString().slice(0,4) ) }}/\n{{ ( ($json.createdAt || $json.updatedAt || $now).toString().slice(5,7) ) }}/\n{{ $json.id || $json.workflowId || $json.data?.id || $json.uid }}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "1c4e854a-f563-4070-a82f-9f72905b4b39",
      "name": "Get file data",
      "type": "n8n-nodes-base.github",
      "position": [
        700,
        1020
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "i0ZoAWs05nqXR0aX",
          "name": "GitHub account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f6d1741-772f-462a-811f-4c334185e4f0",
              "name": "repo_owner",
              "type": "string",
              "value": "MBW-Digital"
            },
            {
              "id": "eee305e9-4164-462a-86bd-80f0d58a31ae",
              "name": "repo_path",
              "type": "string",
              "value": "sinhthaihcm/"
            },
            {
              "id": "081eb008-c3b8-4e4d-a01c-a6922ab5fb5d",
              "name": "repo_name",
              "value": "n8n-backup",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "ce1ebcad-c303-49f2-9b5b-c914c643d3fc",
      "name": "Config",
      "type": "n8n-nodes-base.set",
      "position": [
        700,
        1300
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "chatId": "5716657958",
        "text": ":x: Failed to backup {{ $('Loop Over Items').item.json.id }}",
        "additionalFields": {}
      },
      "id": "cd7b986c-65fb-45cf-808f-dd11e7f34698",
      "name": "Telegram1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2100,
        680
      ],
      "credentials": {
        "telegramApi": {
          "id": "lJyvQ7QnjJm8ZuQD",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "5716657958",
        "text": "✅ Backup has completed - {{ $('n8n').all().length }} workflows have been processed.",
        "additionalFields": {}
      },
      "id": "260816c3-20aa-4fe3-9ec3-99d8ecabfd53",
      "name": "Telegram2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1740,
        480
      ],
      "credentials": {
        "telegramApi": {
          "id": "lJyvQ7QnjJm8ZuQD",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "5716657958",
        "text": ":information_source:  Starting Workflow Backup [{{ $execution.id }}]",
        "additionalFields": {}
      },
      "id": "4af0ec6e-ab81-4040-83ef-8756d6a82bf8",
      "name": "Telegram3",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1160,
        640
      ],
      "credentials": {
        "telegramApi": {
          "id": "lJyvQ7QnjJm8ZuQD",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "5716657958",
        "text": ":x: Success to backup {{ $('Loop Over Items').item.json.id }}",
        "additionalFields": {}
      },
      "id": "cf1a812f-b0b1-4bc3-980c-0b380269b37d",
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2100,
        500
      ],
      "credentials": {
        "telegramApi": {
          "id": "lJyvQ7QnjJm8ZuQD",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "list",
        "owner": {
          "__rl": true,
          "value": "MBW-Digital",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "https://github.com/MBW-Digital/n8n-backup",
          "mode": "url"
        }
      },
      "id": "da3288be-c6fb-4768-ab37-8ba1551a10af",
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [
        2640,
        1380
      ],
      "credentials": {
        "githubApi": {
          "id": "i0ZoAWs05nqXR0aX",
          "name": "GitHub account"
        }
      }
    }
  ],
  "pinData": {},
  "repo_name": "n8n-backup",
  "repo_owner": "MBW-Digital",
  "repo_path": "sinhthaihcm/",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-18T03:17:33.819Z",
  "versionId": "eacce40a-25ee-4a7b-9e98-c510b50c159a"
}